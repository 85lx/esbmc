Terminals which are not used

   ASSERT
   NAMETYPE
   LSUBST
   RSUBST
   BECOMES
   LDOT
   LAMBDA
   IN
   LET
   INTR
   WITHIN


State 67 conflicts: 1 shift/reduce


Grammar

    0 $accept: defns $end

    1 defns: /* empty */
    2      | defn
    3      | NEWLINE defns
    4      | defn NEWLINE defns

    5 defn: lside EQUAL rside
    6     | CHANNEL names
    7     | CHANNEL names COLON seq_type
    8     | DATATYPE name EQUAL datatype

    9 newline0: /* empty */
   10         | NEWLINE

   11 lside: name
   12      | name OPEN exprs CLOSE

   13 rside: proc
   14      | expr_minus_name

   15 seq_type: type
   16         | type DOT seq_type

   17 type: name
   18     | set

   19 datatype: name
   20         | name PIPE datatype

   21 proc: name
   22     | proc_minus_name

   23 proc_minus_name: OPEN proc_minus_name CLOSE
   24                | name OPEN exprs CLOSE
   25                | name ARROW proc
   26                | dotted ARROW proc
   27                | proc SEMI proc
   28                | proc BOX proc
   29                | proc NDET proc
   30                | proc INTL proc
   31                | proc LCOMM setname newline0 RCOMM proc
   32                | proc LSQUARE setname PAR setname RSQUARE proc
   33                | IF cond THEN proc ELSE proc
   34                | STOP
   35                | SKIP
   36                | CHAOS OPEN set CLOSE
   37                | CHAOS OPEN name CLOSE
   38                | proc BACKSLASH setname
   39                | amb GUARD proc
   40                | NDET expr COLON setname AT proc
   41                | BOX expr COLON setname AT proc
   42                | INTL expr COLON setname AT proc
   43                | SEMI expr COLON setname AT proc
   44                | PAR expr COLON setname AT LSQUARE expr RSQUARE proc

   45 exprs: expr
   46      | exprs COMMA expr

   47 expr: name
   48     | expr_minus_name

   49 expr_minus_name: seq
   50                | bool
   51                | num
   52                | amb
   53                | tuple
   54                | set
   55                | commset
   56                | dotted

   57 dotted: name dot_seq
   58       | name COLON event_set

   59 dot_seq: DOT d_expr
   60        | PLING d_expr
   61        | QUERY d_expr
   62        | DOT d_expr dot_seq
   63        | PLING d_expr dot_seq
   64        | QUERY d_expr dot_seq

   65 event_set: set
   66          | commset
   67          | name

   68 d_expr: name
   69       | num
   70       | b_minus
   71       | set
   72       | commset
   73       | seq
   74       | tuple
   75       | amb

   76 dotteds: dotted
   77        | dotted COMMA dotted

   78 cond: bool
   79     | amb

   80 bool: b_minus
   81     | NOT expr
   82     | expr AND expr
   83     | expr OR expr
   84     | expr EQ expr
   85     | expr NE expr
   86     | expr LT expr
   87     | expr GT expr
   88     | expr LE expr
   89     | expr GE expr

   90 b_minus: CSPTRUE
   91        | CSPFALSE

   92 num: NUMBER
   93    | MINUS num_plus
   94    | HASH hash_arg
   95    | num_plus PLUS num_plus
   96    | num_plus MINUS num_plus
   97    | num_plus TIMES num_plus
   98    | num_plus SLASH num_plus
   99    | num_plus MOD num_plus

  100 num_plus: num
  101         | name
  102         | amb

  103 hash_arg: seq
  104         | set
  105         | tuple
  106         | commset
  107         | name
  108         | amb

  109 name: NAME

  110 names: name
  111      | name COMMA names

  112 tuple: OPEN expr COMMA exprs CLOSE

  113 set: LBRACE targ0 RBRACE
  114    | UNION OPEN setnames CLOSE
  115    | INTER OPEN setnames CLOSE
  116    | DIFF OPEN setname COMMA setname CLOSE

  117 setnames: setname
  118         | setname COMMA setnames

  119 setname: set
  120        | commset
  121        | name
  122        | amb

  123 commset: LPBRACE comm0 RPBRACE

  124 comm0: /* empty */
  125      | names
  126      | dotteds

  127 seq: LT targ0 GT
  128    | seqname CAT seqname
  129    | HEAD OPEN seqname CLOSE
  130    | TAIL OPEN seqname CLOSE

  131 seqname: seq
  132        | name

  133 targ0: /* empty */
  134      | targs

  135 targs: targ
  136      | targs COMMA targ

  137 targ: b_minus
  138     | num
  139     | num_name DOTDOT num_name
  140     | num_name DOTDOT
  141     | name
  142     | set
  143     | seq
  144     | tuple
  145     | dotted
  146     | amb

  147 num_name: num
  148         | name

  149 amb: OPEN expr CLOSE


Terminals, with rules where they appear

$end (0) 0
error (256)
ASSERT (258)
NEWLINE (259) 3 4 10
STOP (260) 34
SKIP (261) 35
CHAOS (262) 36 37
NAME (263) 109
NUMBER (264) 92
CSPTRUE (265) 90
CSPFALSE (266) 91
CHANNEL (267) 6 7
DATATYPE (268) 8
NAMETYPE (269)
OPEN (270) 12 23 24 36 37 112 114 115 116 129 130 149
CLOSE (271) 12 23 24 36 37 112 114 115 116 129 130 149
LSUBST (272)
RSUBST (273)
LBRACE (274) 113
RBRACE (275) 113
LPBRACE (276) 123
RPBRACE (277) 123
EQUAL (278) 5 8
COMMA (279) 46 77 111 112 116 118 136
DOTDOT (280) 139 140
PIPE (281) 20
BECOMES (282)
UNION (283) 114
DIFF (284) 116
INTER (285) 115
HEAD (286) 129
TAIL (287) 130
ELSE (288) 33
THEN (289) 33
IF (290) 33
LDOT (291)
LAMBDA (292)
IN (293)
LET (294)
COLON (295) 7 40 41 42 43 44 58
AT (296) 40 41 42 43 44
RSQUARE (297) 32 44
PAR (298) 32 44
LSQUARE (299) 32 44
RCOMM (300) 31
LCOMM (301) 31
BACKSLASH (302) 38
INTL (303) 30 42
NDET (304) 29 40
BOX (305) 28 41
INTR (306)
SEMI (307) 27 43
GUARD (308) 39
WITHIN (309)
DOT (310) 16 59 62
OR (311) 83
AND (312) 82
NOT (313) 81
EQ (314) 84
NE (315) 85
LT (316) 86 127
LE (317) 88
GT (318) 87 127
GE (319) 89
MINUS (320) 93 96
PLUS (321) 95
MOD (322) 99
SLASH (323) 98
TIMES (324) 97
HASH (325) 94
CAT (326) 128
ARROW (327) 25 26
PLING (328) 60 63
QUERY (329) 61 64


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
defns (76)
    on left: 1 2 3 4, on right: 0 3 4
defn (77)
    on left: 5 6 7 8, on right: 2 4
newline0 (78)
    on left: 9 10, on right: 31
lside (79)
    on left: 11 12, on right: 5
rside (80)
    on left: 13 14, on right: 5
seq_type (81)
    on left: 15 16, on right: 7 16
type (82)
    on left: 17 18, on right: 15 16
datatype (83)
    on left: 19 20, on right: 8 20
proc (84)
    on left: 21 22, on right: 13 25 26 27 28 29 30 31 32 33 38 39 40
    41 42 43 44
proc_minus_name (85)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
    41 42 43 44, on right: 22 23
exprs (86)
    on left: 45 46, on right: 12 24 46 112
expr (87)
    on left: 47 48, on right: 40 41 42 43 44 45 46 81 82 83 84 85 86
    87 88 89 112 149
expr_minus_name (88)
    on left: 49 50 51 52 53 54 55 56, on right: 14 48
dotted (89)
    on left: 57 58, on right: 26 56 76 77 145
dot_seq (90)
    on left: 59 60 61 62 63 64, on right: 57 62 63 64
event_set (91)
    on left: 65 66 67, on right: 58
d_expr (92)
    on left: 68 69 70 71 72 73 74 75, on right: 59 60 61 62 63 64
dotteds (93)
    on left: 76 77, on right: 126
cond (94)
    on left: 78 79, on right: 33
bool (95)
    on left: 80 81 82 83 84 85 86 87 88 89, on right: 50 78
b_minus (96)
    on left: 90 91, on right: 70 80 137
num (97)
    on left: 92 93 94 95 96 97 98 99, on right: 51 69 100 138 147
num_plus (98)
    on left: 100 101 102, on right: 93 95 96 97 98 99
hash_arg (99)
    on left: 103 104 105 106 107 108, on right: 94
name (100)
    on left: 109, on right: 8 11 12 17 19 20 21 24 25 37 47 57 58 67
    68 101 107 110 111 121 132 141 148
names (101)
    on left: 110 111, on right: 6 7 111 125
tuple (102)
    on left: 112, on right: 53 74 105 144
set (103)
    on left: 113 114 115 116, on right: 18 36 54 65 71 104 119 142
setnames (104)
    on left: 117 118, on right: 114 115 118
setname (105)
    on left: 119 120 121 122, on right: 31 32 38 40 41 42 43 44 116
    117 118
commset (106)
    on left: 123, on right: 55 66 72 106 120
comm0 (107)
    on left: 124 125 126, on right: 123
seq (108)
    on left: 127 128 129 130, on right: 49 73 103 131 143
seqname (109)
    on left: 131 132, on right: 128 129 130
targ0 (110)
    on left: 133 134, on right: 113 127
targs (111)
    on left: 135 136, on right: 134 136
targ (112)
    on left: 137 138 139 140 141 142 143 144 145 146,
    on right: 135 136
num_name (113)
    on left: 147 148, on right: 139 140
amb (114)
    on left: 149, on right: 39 52 75 79 102 108 122 146


state 0

    0 $accept: . defns $end

    NEWLINE   shift, and go to state 1
    NAME      shift, and go to state 2
    CHANNEL   shift, and go to state 3
    DATATYPE  shift, and go to state 4

    $default  reduce using rule 1 (defns)

    defns  go to state 5
    defn   go to state 6
    lside  go to state 7
    name   go to state 8


state 1

    3 defns: NEWLINE . defns

    NEWLINE   shift, and go to state 1
    NAME      shift, and go to state 2
    CHANNEL   shift, and go to state 3
    DATATYPE  shift, and go to state 4

    $default  reduce using rule 1 (defns)

    defns  go to state 9
    defn   go to state 6
    lside  go to state 7
    name   go to state 8


state 2

  109 name: NAME .

    $default  reduce using rule 109 (name)


state 3

    6 defn: CHANNEL . names
    7     | CHANNEL . names COLON seq_type

    NAME  shift, and go to state 2

    name   go to state 10
    names  go to state 11


state 4

    8 defn: DATATYPE . name EQUAL datatype

    NAME  shift, and go to state 2

    name  go to state 12


state 5

    0 $accept: defns . $end

    $end  shift, and go to state 13


state 6

    2 defns: defn .
    4      | defn . NEWLINE defns

    NEWLINE  shift, and go to state 14

    $default  reduce using rule 2 (defns)


state 7

    5 defn: lside . EQUAL rside

    EQUAL  shift, and go to state 15


state 8

   11 lside: name .
   12      | name . OPEN exprs CLOSE

    OPEN  shift, and go to state 16

    $default  reduce using rule 11 (lside)


state 9

    3 defns: NEWLINE defns .

    $default  reduce using rule 3 (defns)


state 10

  110 names: name .
  111      | name . COMMA names

    COMMA  shift, and go to state 17

    $default  reduce using rule 110 (names)


state 11

    6 defn: CHANNEL names .
    7     | CHANNEL names . COLON seq_type

    COLON  shift, and go to state 18

    $default  reduce using rule 6 (defn)


state 12

    8 defn: DATATYPE name . EQUAL datatype

    EQUAL  shift, and go to state 19


state 13

    0 $accept: defns $end .

    $default  accept


state 14

    4 defns: defn NEWLINE . defns

    NEWLINE   shift, and go to state 1
    NAME      shift, and go to state 2
    CHANNEL   shift, and go to state 3
    DATATYPE  shift, and go to state 4

    $default  reduce using rule 1 (defns)

    defns  go to state 20
    defn   go to state 6
    lside  go to state 7
    name   go to state 8


state 15

    5 defn: lside EQUAL . rside

    STOP      shift, and go to state 21
    SKIP      shift, and go to state 22
    CHAOS     shift, and go to state 23
    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 27
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    IF        shift, and go to state 35
    PAR       shift, and go to state 36
    INTL      shift, and go to state 37
    NDET      shift, and go to state 38
    BOX       shift, and go to state 39
    SEMI      shift, and go to state 40
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    rside            go to state 45
    proc             go to state 46
    proc_minus_name  go to state 47
    expr             go to state 48
    expr_minus_name  go to state 49
    dotted           go to state 50
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 55
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 61


state 16

   12 lside: name OPEN . exprs CLOSE

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    exprs            go to state 63
    expr             go to state 64
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 17

  111 names: name COMMA . names

    NAME  shift, and go to state 2

    name   go to state 10
    names  go to state 69


state 18

    7 defn: CHANNEL names COLON . seq_type

    NAME    shift, and go to state 2
    LBRACE  shift, and go to state 28
    UNION   shift, and go to state 30
    DIFF    shift, and go to state 31
    INTER   shift, and go to state 32

    seq_type  go to state 70
    type      go to state 71
    name      go to state 72
    set       go to state 73


state 19

    8 defn: DATATYPE name EQUAL . datatype

    NAME  shift, and go to state 2

    datatype  go to state 74
    name      go to state 75


state 20

    4 defns: defn NEWLINE defns .

    $default  reduce using rule 4 (defns)


state 21

   34 proc_minus_name: STOP .

    $default  reduce using rule 34 (proc_minus_name)


state 22

   35 proc_minus_name: SKIP .

    $default  reduce using rule 35 (proc_minus_name)


state 23

   36 proc_minus_name: CHAOS . OPEN set CLOSE
   37                | CHAOS . OPEN name CLOSE

    OPEN  shift, and go to state 76


state 24

   92 num: NUMBER .

    $default  reduce using rule 92 (num)


state 25

   90 b_minus: CSPTRUE .

    $default  reduce using rule 90 (b_minus)


state 26

   91 b_minus: CSPFALSE .

    $default  reduce using rule 91 (b_minus)


state 27

   23 proc_minus_name: OPEN . proc_minus_name CLOSE
  112 tuple: OPEN . expr COMMA exprs CLOSE
  149 amb: OPEN . expr CLOSE

    STOP      shift, and go to state 21
    SKIP      shift, and go to state 22
    CHAOS     shift, and go to state 23
    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 27
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    IF        shift, and go to state 35
    PAR       shift, and go to state 36
    INTL      shift, and go to state 37
    NDET      shift, and go to state 38
    BOX       shift, and go to state 39
    SEMI      shift, and go to state 40
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    proc             go to state 77
    proc_minus_name  go to state 78
    expr             go to state 79
    expr_minus_name  go to state 65
    dotted           go to state 50
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 55
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 61


state 28

  113 set: LBRACE . targ0 RBRACE

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    $default  reduce using rule 133 (targ0)

    dotted    go to state 80
    b_minus   go to state 81
    num       go to state 82
    num_plus  go to state 54
    name      go to state 83
    tuple     go to state 84
    set       go to state 85
    seq       go to state 86
    seqname   go to state 60
    targ0     go to state 87
    targs     go to state 88
    targ      go to state 89
    num_name  go to state 90
    amb       go to state 91


state 29

  123 commset: LPBRACE . comm0 RPBRACE

    NAME  shift, and go to state 2

    $default  reduce using rule 124 (comm0)

    dotted   go to state 92
    dotteds  go to state 93
    name     go to state 94
    names    go to state 95
    comm0    go to state 96


state 30

  114 set: UNION . OPEN setnames CLOSE

    OPEN  shift, and go to state 97


state 31

  116 set: DIFF . OPEN setname COMMA setname CLOSE

    OPEN  shift, and go to state 98


state 32

  115 set: INTER . OPEN setnames CLOSE

    OPEN  shift, and go to state 99


state 33

  129 seq: HEAD . OPEN seqname CLOSE

    OPEN  shift, and go to state 100


state 34

  130 seq: TAIL . OPEN seqname CLOSE

    OPEN  shift, and go to state 101


state 35

   33 proc_minus_name: IF . cond THEN proc ELSE proc

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 48
    expr_minus_name  go to state 65
    dotted           go to state 66
    cond             go to state 102
    bool             go to state 103
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 104


state 36

   44 proc_minus_name: PAR . expr COLON setname AT LSQUARE expr RSQUARE proc

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 105
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 37

   42 proc_minus_name: INTL . expr COLON setname AT proc

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 106
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 38

   40 proc_minus_name: NDET . expr COLON setname AT proc

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 107
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 39

   41 proc_minus_name: BOX . expr COLON setname AT proc

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 108
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 40

   43 proc_minus_name: SEMI . expr COLON setname AT proc

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 109
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 41

   81 bool: NOT . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 110
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 42

  127 seq: LT . targ0 GT

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    $default  reduce using rule 133 (targ0)

    dotted    go to state 80
    b_minus   go to state 81
    num       go to state 82
    num_plus  go to state 54
    name      go to state 83
    tuple     go to state 84
    set       go to state 85
    seq       go to state 86
    seqname   go to state 60
    targ0     go to state 111
    targs     go to state 88
    targ      go to state 89
    num_name  go to state 90
    amb       go to state 91


state 43

   93 num: MINUS . num_plus

    NAME    shift, and go to state 2
    NUMBER  shift, and go to state 24
    OPEN    shift, and go to state 112
    MINUS   shift, and go to state 43
    HASH    shift, and go to state 44

    num       go to state 113
    num_plus  go to state 114
    name      go to state 115
    amb       go to state 116


state 44

   94 num: HASH . hash_arg

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 62
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32
    HEAD     shift, and go to state 33
    TAIL     shift, and go to state 34
    LT       shift, and go to state 42

    hash_arg  go to state 117
    name      go to state 118
    tuple     go to state 119
    set       go to state 120
    commset   go to state 121
    seq       go to state 122
    seqname   go to state 60
    amb       go to state 123


state 45

    5 defn: lside EQUAL rside .

    $default  reduce using rule 5 (defn)


state 46

   13 rside: proc .
   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    $default  reduce using rule 13 (rside)


state 47

   22 proc: proc_minus_name .

    $default  reduce using rule 22 (proc)


state 48

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    OR   shift, and go to state 131
    AND  shift, and go to state 132
    EQ   shift, and go to state 133
    NE   shift, and go to state 134
    LT   shift, and go to state 135
    LE   shift, and go to state 136
    GT   shift, and go to state 137
    GE   shift, and go to state 138


state 49

   14 rside: expr_minus_name .
   48 expr: expr_minus_name .

    $end      reduce using rule 14 (rside)
    NEWLINE   reduce using rule 14 (rside)
    $default  reduce using rule 48 (expr)


state 50

   26 proc_minus_name: dotted . ARROW proc
   56 expr_minus_name: dotted .

    ARROW  shift, and go to state 139

    $default  reduce using rule 56 (expr_minus_name)


state 51

   50 expr_minus_name: bool .

    $default  reduce using rule 50 (expr_minus_name)


state 52

   80 bool: b_minus .

    $default  reduce using rule 80 (bool)


state 53

   51 expr_minus_name: num .
  100 num_plus: num .

    MINUS     reduce using rule 100 (num_plus)
    PLUS      reduce using rule 100 (num_plus)
    MOD       reduce using rule 100 (num_plus)
    SLASH     reduce using rule 100 (num_plus)
    TIMES     reduce using rule 100 (num_plus)
    $default  reduce using rule 51 (expr_minus_name)


state 54

   95 num: num_plus . PLUS num_plus
   96    | num_plus . MINUS num_plus
   97    | num_plus . TIMES num_plus
   98    | num_plus . SLASH num_plus
   99    | num_plus . MOD num_plus

    MINUS  shift, and go to state 140
    PLUS   shift, and go to state 141
    MOD    shift, and go to state 142
    SLASH  shift, and go to state 143
    TIMES  shift, and go to state 144


state 55

   21 proc: name .
   24 proc_minus_name: name . OPEN exprs CLOSE
   25                | name . ARROW proc
   47 expr: name .
   57 dotted: name . dot_seq
   58       | name . COLON event_set
  101 num_plus: name .
  132 seqname: name .

    OPEN   shift, and go to state 145
    COLON  shift, and go to state 146
    DOT    shift, and go to state 147
    ARROW  shift, and go to state 148
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    $end       reduce using rule 21 (proc)
    NEWLINE    reduce using rule 21 (proc)
    LSQUARE    reduce using rule 21 (proc)
    LCOMM      reduce using rule 21 (proc)
    BACKSLASH  reduce using rule 21 (proc)
    INTL       reduce using rule 21 (proc)
    NDET       reduce using rule 21 (proc)
    BOX        reduce using rule 21 (proc)
    SEMI       reduce using rule 21 (proc)
    MINUS      reduce using rule 101 (num_plus)
    PLUS       reduce using rule 101 (num_plus)
    MOD        reduce using rule 101 (num_plus)
    SLASH      reduce using rule 101 (num_plus)
    TIMES      reduce using rule 101 (num_plus)
    CAT        reduce using rule 132 (seqname)
    $default   reduce using rule 47 (expr)

    dot_seq  go to state 151


state 56

   53 expr_minus_name: tuple .

    $default  reduce using rule 53 (expr_minus_name)


state 57

   54 expr_minus_name: set .

    $default  reduce using rule 54 (expr_minus_name)


state 58

   55 expr_minus_name: commset .

    $default  reduce using rule 55 (expr_minus_name)


state 59

   49 expr_minus_name: seq .
  131 seqname: seq .

    CAT       reduce using rule 131 (seqname)
    $default  reduce using rule 49 (expr_minus_name)


state 60

  128 seq: seqname . CAT seqname

    CAT  shift, and go to state 152


state 61

   39 proc_minus_name: amb . GUARD proc
   52 expr_minus_name: amb .
  102 num_plus: amb .

    GUARD  shift, and go to state 153

    MINUS     reduce using rule 102 (num_plus)
    PLUS      reduce using rule 102 (num_plus)
    MOD       reduce using rule 102 (num_plus)
    SLASH     reduce using rule 102 (num_plus)
    TIMES     reduce using rule 102 (num_plus)
    $default  reduce using rule 52 (expr_minus_name)


state 62

  112 tuple: OPEN . expr COMMA exprs CLOSE
  149 amb: OPEN . expr CLOSE

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 79
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 63

   12 lside: name OPEN exprs . CLOSE
   46 exprs: exprs . COMMA expr

    CLOSE  shift, and go to state 154
    COMMA  shift, and go to state 155


state 64

   45 exprs: expr .
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    OR   shift, and go to state 131
    AND  shift, and go to state 132
    EQ   shift, and go to state 133
    NE   shift, and go to state 134
    LT   shift, and go to state 135
    LE   shift, and go to state 136
    GT   shift, and go to state 137
    GE   shift, and go to state 138

    $default  reduce using rule 45 (exprs)


state 65

   48 expr: expr_minus_name .

    $default  reduce using rule 48 (expr)


state 66

   56 expr_minus_name: dotted .

    $default  reduce using rule 56 (expr_minus_name)


state 67

   47 expr: name .
   57 dotted: name . dot_seq
   58       | name . COLON event_set
  101 num_plus: name .
  132 seqname: name .

    COLON  shift, and go to state 146
    DOT    shift, and go to state 147
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    COLON     [reduce using rule 47 (expr)]
    MINUS     reduce using rule 101 (num_plus)
    PLUS      reduce using rule 101 (num_plus)
    MOD       reduce using rule 101 (num_plus)
    SLASH     reduce using rule 101 (num_plus)
    TIMES     reduce using rule 101 (num_plus)
    CAT       reduce using rule 132 (seqname)
    $default  reduce using rule 47 (expr)

    dot_seq  go to state 151


state 68

   52 expr_minus_name: amb .
  102 num_plus: amb .

    MINUS     reduce using rule 102 (num_plus)
    PLUS      reduce using rule 102 (num_plus)
    MOD       reduce using rule 102 (num_plus)
    SLASH     reduce using rule 102 (num_plus)
    TIMES     reduce using rule 102 (num_plus)
    $default  reduce using rule 52 (expr_minus_name)


state 69

  111 names: name COMMA names .

    $default  reduce using rule 111 (names)


state 70

    7 defn: CHANNEL names COLON seq_type .

    $default  reduce using rule 7 (defn)


state 71

   15 seq_type: type .
   16         | type . DOT seq_type

    DOT  shift, and go to state 156

    $default  reduce using rule 15 (seq_type)


state 72

   17 type: name .

    $default  reduce using rule 17 (type)


state 73

   18 type: set .

    $default  reduce using rule 18 (type)


state 74

    8 defn: DATATYPE name EQUAL datatype .

    $default  reduce using rule 8 (defn)


state 75

   19 datatype: name .
   20         | name . PIPE datatype

    PIPE  shift, and go to state 157

    $default  reduce using rule 19 (datatype)


state 76

   36 proc_minus_name: CHAOS OPEN . set CLOSE
   37                | CHAOS OPEN . name CLOSE

    NAME    shift, and go to state 2
    LBRACE  shift, and go to state 28
    UNION   shift, and go to state 30
    DIFF    shift, and go to state 31
    INTER   shift, and go to state 32

    name  go to state 158
    set   go to state 159


state 77

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130


state 78

   22 proc: proc_minus_name .
   23 proc_minus_name: OPEN proc_minus_name . CLOSE

    CLOSE  shift, and go to state 160

    $default  reduce using rule 22 (proc)


state 79

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr
  112 tuple: OPEN expr . COMMA exprs CLOSE
  149 amb: OPEN expr . CLOSE

    CLOSE  shift, and go to state 161
    COMMA  shift, and go to state 162
    OR     shift, and go to state 131
    AND    shift, and go to state 132
    EQ     shift, and go to state 133
    NE     shift, and go to state 134
    LT     shift, and go to state 135
    LE     shift, and go to state 136
    GT     shift, and go to state 137
    GE     shift, and go to state 138


state 80

  145 targ: dotted .

    $default  reduce using rule 145 (targ)


state 81

  137 targ: b_minus .

    $default  reduce using rule 137 (targ)


state 82

  100 num_plus: num .
  138 targ: num .
  147 num_name: num .

    RBRACE    reduce using rule 138 (targ)
    COMMA     reduce using rule 138 (targ)
    DOTDOT    reduce using rule 147 (num_name)
    GT        reduce using rule 138 (targ)
    $default  reduce using rule 100 (num_plus)


state 83

   57 dotted: name . dot_seq
   58       | name . COLON event_set
  101 num_plus: name .
  132 seqname: name .
  141 targ: name .
  148 num_name: name .

    COLON  shift, and go to state 146
    DOT    shift, and go to state 147
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    RBRACE    reduce using rule 141 (targ)
    COMMA     reduce using rule 141 (targ)
    DOTDOT    reduce using rule 148 (num_name)
    GT        reduce using rule 141 (targ)
    CAT       reduce using rule 132 (seqname)
    $default  reduce using rule 101 (num_plus)

    dot_seq  go to state 151


state 84

  144 targ: tuple .

    $default  reduce using rule 144 (targ)


state 85

  142 targ: set .

    $default  reduce using rule 142 (targ)


state 86

  131 seqname: seq .
  143 targ: seq .

    CAT       reduce using rule 131 (seqname)
    $default  reduce using rule 143 (targ)


state 87

  113 set: LBRACE targ0 . RBRACE

    RBRACE  shift, and go to state 163


state 88

  134 targ0: targs .
  136 targs: targs . COMMA targ

    COMMA  shift, and go to state 164

    $default  reduce using rule 134 (targ0)


state 89

  135 targs: targ .

    $default  reduce using rule 135 (targs)


state 90

  139 targ: num_name . DOTDOT num_name
  140     | num_name . DOTDOT

    DOTDOT  shift, and go to state 165


state 91

  102 num_plus: amb .
  146 targ: amb .

    RBRACE    reduce using rule 146 (targ)
    COMMA     reduce using rule 146 (targ)
    GT        reduce using rule 146 (targ)
    $default  reduce using rule 102 (num_plus)


state 92

   76 dotteds: dotted .
   77        | dotted . COMMA dotted

    COMMA  shift, and go to state 166

    $default  reduce using rule 76 (dotteds)


state 93

  126 comm0: dotteds .

    $default  reduce using rule 126 (comm0)


state 94

   57 dotted: name . dot_seq
   58       | name . COLON event_set
  110 names: name .
  111      | name . COMMA names

    COMMA  shift, and go to state 17
    COLON  shift, and go to state 146
    DOT    shift, and go to state 147
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    $default  reduce using rule 110 (names)

    dot_seq  go to state 151


state 95

  125 comm0: names .

    $default  reduce using rule 125 (comm0)


state 96

  123 commset: LPBRACE comm0 . RPBRACE

    RPBRACE  shift, and go to state 167


state 97

  114 set: UNION OPEN . setnames CLOSE

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name      go to state 168
    set       go to state 169
    setnames  go to state 170
    setname   go to state 171
    commset   go to state 172
    amb       go to state 173


state 98

  116 set: DIFF OPEN . setname COMMA setname CLOSE

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 174
    commset  go to state 172
    amb      go to state 173


state 99

  115 set: INTER OPEN . setnames CLOSE

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name      go to state 168
    set       go to state 169
    setnames  go to state 175
    setname   go to state 171
    commset   go to state 172
    amb       go to state 173


state 100

  129 seq: HEAD OPEN . seqname CLOSE

    NAME  shift, and go to state 2
    HEAD  shift, and go to state 33
    TAIL  shift, and go to state 34
    LT    shift, and go to state 42

    name     go to state 176
    seq      go to state 177
    seqname  go to state 178


state 101

  130 seq: TAIL OPEN . seqname CLOSE

    NAME  shift, and go to state 2
    HEAD  shift, and go to state 33
    TAIL  shift, and go to state 34
    LT    shift, and go to state 42

    name     go to state 176
    seq      go to state 177
    seqname  go to state 179


state 102

   33 proc_minus_name: IF cond . THEN proc ELSE proc

    THEN  shift, and go to state 180


state 103

   50 expr_minus_name: bool .
   78 cond: bool .

    THEN      reduce using rule 78 (cond)
    $default  reduce using rule 50 (expr_minus_name)


state 104

   52 expr_minus_name: amb .
   79 cond: amb .
  102 num_plus: amb .

    THEN      reduce using rule 79 (cond)
    MINUS     reduce using rule 102 (num_plus)
    PLUS      reduce using rule 102 (num_plus)
    MOD       reduce using rule 102 (num_plus)
    SLASH     reduce using rule 102 (num_plus)
    TIMES     reduce using rule 102 (num_plus)
    $default  reduce using rule 52 (expr_minus_name)


state 105

   44 proc_minus_name: PAR expr . COLON setname AT LSQUARE expr RSQUARE proc
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    COLON  shift, and go to state 181
    OR     shift, and go to state 131
    AND    shift, and go to state 132
    EQ     shift, and go to state 133
    NE     shift, and go to state 134
    LT     shift, and go to state 135
    LE     shift, and go to state 136
    GT     shift, and go to state 137
    GE     shift, and go to state 138


state 106

   42 proc_minus_name: INTL expr . COLON setname AT proc
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    COLON  shift, and go to state 182
    OR     shift, and go to state 131
    AND    shift, and go to state 132
    EQ     shift, and go to state 133
    NE     shift, and go to state 134
    LT     shift, and go to state 135
    LE     shift, and go to state 136
    GT     shift, and go to state 137
    GE     shift, and go to state 138


state 107

   40 proc_minus_name: NDET expr . COLON setname AT proc
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    COLON  shift, and go to state 183
    OR     shift, and go to state 131
    AND    shift, and go to state 132
    EQ     shift, and go to state 133
    NE     shift, and go to state 134
    LT     shift, and go to state 135
    LE     shift, and go to state 136
    GT     shift, and go to state 137
    GE     shift, and go to state 138


state 108

   41 proc_minus_name: BOX expr . COLON setname AT proc
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    COLON  shift, and go to state 184
    OR     shift, and go to state 131
    AND    shift, and go to state 132
    EQ     shift, and go to state 133
    NE     shift, and go to state 134
    LT     shift, and go to state 135
    LE     shift, and go to state 136
    GT     shift, and go to state 137
    GE     shift, and go to state 138


state 109

   43 proc_minus_name: SEMI expr . COLON setname AT proc
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    COLON  shift, and go to state 185
    OR     shift, and go to state 131
    AND    shift, and go to state 132
    EQ     shift, and go to state 133
    NE     shift, and go to state 134
    LT     shift, and go to state 135
    LE     shift, and go to state 136
    GT     shift, and go to state 137
    GE     shift, and go to state 138


state 110

   81 bool: NOT expr .
   82     | expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    EQ  shift, and go to state 133
    NE  shift, and go to state 134
    LT  shift, and go to state 135
    LE  shift, and go to state 136
    GT  shift, and go to state 137
    GE  shift, and go to state 138

    $default  reduce using rule 81 (bool)


state 111

  127 seq: LT targ0 . GT

    GT  shift, and go to state 186


state 112

  149 amb: OPEN . expr CLOSE

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 187
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 113

  100 num_plus: num .

    $default  reduce using rule 100 (num_plus)


state 114

   93 num: MINUS num_plus .
   95    | num_plus . PLUS num_plus
   96    | num_plus . MINUS num_plus
   97    | num_plus . TIMES num_plus
   98    | num_plus . SLASH num_plus
   99    | num_plus . MOD num_plus

    MOD    shift, and go to state 142
    SLASH  shift, and go to state 143
    TIMES  shift, and go to state 144

    $default  reduce using rule 93 (num)


state 115

  101 num_plus: name .

    $default  reduce using rule 101 (num_plus)


state 116

  102 num_plus: amb .

    $default  reduce using rule 102 (num_plus)


state 117

   94 num: HASH hash_arg .

    $default  reduce using rule 94 (num)


state 118

  107 hash_arg: name .
  132 seqname: name .

    CAT       reduce using rule 132 (seqname)
    $default  reduce using rule 107 (hash_arg)


state 119

  105 hash_arg: tuple .

    $default  reduce using rule 105 (hash_arg)


state 120

  104 hash_arg: set .

    $default  reduce using rule 104 (hash_arg)


state 121

  106 hash_arg: commset .

    $default  reduce using rule 106 (hash_arg)


state 122

  103 hash_arg: seq .
  131 seqname: seq .

    CAT       reduce using rule 131 (seqname)
    $default  reduce using rule 103 (hash_arg)


state 123

  108 hash_arg: amb .

    $default  reduce using rule 108 (hash_arg)


state 124

   32 proc_minus_name: proc LSQUARE . setname PAR setname RSQUARE proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 188
    commset  go to state 172
    amb      go to state 173


state 125

   31 proc_minus_name: proc LCOMM . setname newline0 RCOMM proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 189
    commset  go to state 172
    amb      go to state 173


state 126

   38 proc_minus_name: proc BACKSLASH . setname

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 190
    commset  go to state 172
    amb      go to state 173


state 127

   30 proc_minus_name: proc INTL . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 192
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 128

   29 proc_minus_name: proc NDET . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 196
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 129

   28 proc_minus_name: proc BOX . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 197
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 130

   27 proc_minus_name: proc SEMI . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 198
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 131

   83 bool: expr OR . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 199
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 132

   82 bool: expr AND . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 200
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 133

   84 bool: expr EQ . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 201
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 134

   85 bool: expr NE . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 202
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 135

   86 bool: expr LT . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 203
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 136

   88 bool: expr LE . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 204
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 137

   87 bool: expr GT . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 205
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 138

   89 bool: expr GE . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 206
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 139

   26 proc_minus_name: dotted ARROW . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 207
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 140

   96 num: num_plus MINUS . num_plus

    NAME    shift, and go to state 2
    NUMBER  shift, and go to state 24
    OPEN    shift, and go to state 112
    MINUS   shift, and go to state 43
    HASH    shift, and go to state 44

    num       go to state 113
    num_plus  go to state 208
    name      go to state 115
    amb       go to state 116


state 141

   95 num: num_plus PLUS . num_plus

    NAME    shift, and go to state 2
    NUMBER  shift, and go to state 24
    OPEN    shift, and go to state 112
    MINUS   shift, and go to state 43
    HASH    shift, and go to state 44

    num       go to state 113
    num_plus  go to state 209
    name      go to state 115
    amb       go to state 116


state 142

   99 num: num_plus MOD . num_plus

    NAME    shift, and go to state 2
    NUMBER  shift, and go to state 24
    OPEN    shift, and go to state 112
    MINUS   shift, and go to state 43
    HASH    shift, and go to state 44

    num       go to state 113
    num_plus  go to state 210
    name      go to state 115
    amb       go to state 116


state 143

   98 num: num_plus SLASH . num_plus

    NAME    shift, and go to state 2
    NUMBER  shift, and go to state 24
    OPEN    shift, and go to state 112
    MINUS   shift, and go to state 43
    HASH    shift, and go to state 44

    num       go to state 113
    num_plus  go to state 211
    name      go to state 115
    amb       go to state 116


state 144

   97 num: num_plus TIMES . num_plus

    NAME    shift, and go to state 2
    NUMBER  shift, and go to state 24
    OPEN    shift, and go to state 112
    MINUS   shift, and go to state 43
    HASH    shift, and go to state 44

    num       go to state 113
    num_plus  go to state 212
    name      go to state 115
    amb       go to state 116


state 145

   24 proc_minus_name: name OPEN . exprs CLOSE

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    exprs            go to state 213
    expr             go to state 64
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 146

   58 dotted: name COLON . event_set

    NAME     shift, and go to state 2
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    event_set  go to state 214
    name       go to state 215
    set        go to state 216
    commset    go to state 217


state 147

   59 dot_seq: DOT . d_expr
   62        | DOT . d_expr dot_seq

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    d_expr    go to state 218
    b_minus   go to state 219
    num       go to state 220
    num_plus  go to state 54
    name      go to state 221
    tuple     go to state 222
    set       go to state 223
    commset   go to state 224
    seq       go to state 225
    seqname   go to state 60
    amb       go to state 226


state 148

   25 proc_minus_name: name ARROW . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 227
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 149

   60 dot_seq: PLING . d_expr
   63        | PLING . d_expr dot_seq

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    d_expr    go to state 228
    b_minus   go to state 219
    num       go to state 220
    num_plus  go to state 54
    name      go to state 221
    tuple     go to state 222
    set       go to state 223
    commset   go to state 224
    seq       go to state 225
    seqname   go to state 60
    amb       go to state 226


state 150

   61 dot_seq: QUERY . d_expr
   64        | QUERY . d_expr dot_seq

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    d_expr    go to state 229
    b_minus   go to state 219
    num       go to state 220
    num_plus  go to state 54
    name      go to state 221
    tuple     go to state 222
    set       go to state 223
    commset   go to state 224
    seq       go to state 225
    seqname   go to state 60
    amb       go to state 226


state 151

   57 dotted: name dot_seq .

    $default  reduce using rule 57 (dotted)


state 152

  128 seq: seqname CAT . seqname

    NAME  shift, and go to state 2
    HEAD  shift, and go to state 33
    TAIL  shift, and go to state 34
    LT    shift, and go to state 42

    name     go to state 176
    seq      go to state 177
    seqname  go to state 230


state 153

   39 proc_minus_name: amb GUARD . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 231
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 154

   12 lside: name OPEN exprs CLOSE .

    $default  reduce using rule 12 (lside)


state 155

   46 exprs: exprs COMMA . expr

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 232
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 156

   16 seq_type: type DOT . seq_type

    NAME    shift, and go to state 2
    LBRACE  shift, and go to state 28
    UNION   shift, and go to state 30
    DIFF    shift, and go to state 31
    INTER   shift, and go to state 32

    seq_type  go to state 233
    type      go to state 71
    name      go to state 72
    set       go to state 73


state 157

   20 datatype: name PIPE . datatype

    NAME  shift, and go to state 2

    datatype  go to state 234
    name      go to state 75


state 158

   37 proc_minus_name: CHAOS OPEN name . CLOSE

    CLOSE  shift, and go to state 235


state 159

   36 proc_minus_name: CHAOS OPEN set . CLOSE

    CLOSE  shift, and go to state 236


state 160

   23 proc_minus_name: OPEN proc_minus_name CLOSE .

    $default  reduce using rule 23 (proc_minus_name)


state 161

  149 amb: OPEN expr CLOSE .

    $default  reduce using rule 149 (amb)


state 162

  112 tuple: OPEN expr COMMA . exprs CLOSE

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    exprs            go to state 237
    expr             go to state 64
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 163

  113 set: LBRACE targ0 RBRACE .

    $default  reduce using rule 113 (set)


state 164

  136 targs: targs COMMA . targ

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    dotted    go to state 80
    b_minus   go to state 81
    num       go to state 82
    num_plus  go to state 54
    name      go to state 83
    tuple     go to state 84
    set       go to state 85
    seq       go to state 86
    seqname   go to state 60
    targ      go to state 238
    num_name  go to state 90
    amb       go to state 91


state 165

  139 targ: num_name DOTDOT . num_name
  140     | num_name DOTDOT .

    NAME    shift, and go to state 2
    NUMBER  shift, and go to state 24
    OPEN    shift, and go to state 112
    MINUS   shift, and go to state 43
    HASH    shift, and go to state 44

    $default  reduce using rule 140 (targ)

    num       go to state 239
    num_plus  go to state 54
    name      go to state 240
    num_name  go to state 241
    amb       go to state 116


state 166

   77 dotteds: dotted COMMA . dotted

    NAME  shift, and go to state 2

    dotted  go to state 242
    name    go to state 243


state 167

  123 commset: LPBRACE comm0 RPBRACE .

    $default  reduce using rule 123 (commset)


state 168

  121 setname: name .

    $default  reduce using rule 121 (setname)


state 169

  119 setname: set .

    $default  reduce using rule 119 (setname)


state 170

  114 set: UNION OPEN setnames . CLOSE

    CLOSE  shift, and go to state 244


state 171

  117 setnames: setname .
  118         | setname . COMMA setnames

    COMMA  shift, and go to state 245

    $default  reduce using rule 117 (setnames)


state 172

  120 setname: commset .

    $default  reduce using rule 120 (setname)


state 173

  122 setname: amb .

    $default  reduce using rule 122 (setname)


state 174

  116 set: DIFF OPEN setname . COMMA setname CLOSE

    COMMA  shift, and go to state 246


state 175

  115 set: INTER OPEN setnames . CLOSE

    CLOSE  shift, and go to state 247


state 176

  132 seqname: name .

    $default  reduce using rule 132 (seqname)


state 177

  131 seqname: seq .

    $default  reduce using rule 131 (seqname)


state 178

  128 seq: seqname . CAT seqname
  129    | HEAD OPEN seqname . CLOSE

    CLOSE  shift, and go to state 248
    CAT    shift, and go to state 152


state 179

  128 seq: seqname . CAT seqname
  130    | TAIL OPEN seqname . CLOSE

    CLOSE  shift, and go to state 249
    CAT    shift, and go to state 152


state 180

   33 proc_minus_name: IF cond THEN . proc ELSE proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 250
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 181

   44 proc_minus_name: PAR expr COLON . setname AT LSQUARE expr RSQUARE proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 251
    commset  go to state 172
    amb      go to state 173


state 182

   42 proc_minus_name: INTL expr COLON . setname AT proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 252
    commset  go to state 172
    amb      go to state 173


state 183

   40 proc_minus_name: NDET expr COLON . setname AT proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 253
    commset  go to state 172
    amb      go to state 173


state 184

   41 proc_minus_name: BOX expr COLON . setname AT proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 254
    commset  go to state 172
    amb      go to state 173


state 185

   43 proc_minus_name: SEMI expr COLON . setname AT proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 255
    commset  go to state 172
    amb      go to state 173


state 186

  127 seq: LT targ0 GT .

    $default  reduce using rule 127 (seq)


state 187

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr
  149 amb: OPEN expr . CLOSE

    CLOSE  shift, and go to state 161
    OR     shift, and go to state 131
    AND    shift, and go to state 132
    EQ     shift, and go to state 133
    NE     shift, and go to state 134
    LT     shift, and go to state 135
    LE     shift, and go to state 136
    GT     shift, and go to state 137
    GE     shift, and go to state 138


state 188

   32 proc_minus_name: proc LSQUARE setname . PAR setname RSQUARE proc

    PAR  shift, and go to state 256


state 189

   31 proc_minus_name: proc LCOMM setname . newline0 RCOMM proc

    NEWLINE  shift, and go to state 257

    $default  reduce using rule 9 (newline0)

    newline0  go to state 258


state 190

   38 proc_minus_name: proc BACKSLASH setname .

    $default  reduce using rule 38 (proc_minus_name)


state 191

   23 proc_minus_name: OPEN . proc_minus_name CLOSE
  149 amb: OPEN . expr CLOSE

    STOP      shift, and go to state 21
    SKIP      shift, and go to state 22
    CHAOS     shift, and go to state 23
    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 27
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    IF        shift, and go to state 35
    PAR       shift, and go to state 36
    INTL      shift, and go to state 37
    NDET      shift, and go to state 38
    BOX       shift, and go to state 39
    SEMI      shift, and go to state 40
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    proc             go to state 77
    proc_minus_name  go to state 78
    expr             go to state 187
    expr_minus_name  go to state 65
    dotted           go to state 50
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 55
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 61


state 192

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   30                | proc INTL proc .
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    NDET  shift, and go to state 128
    BOX   shift, and go to state 129
    SEMI  shift, and go to state 130

    $default  reduce using rule 30 (proc_minus_name)


state 193

   26 proc_minus_name: dotted . ARROW proc

    ARROW  shift, and go to state 139


state 194

   21 proc: name .
   24 proc_minus_name: name . OPEN exprs CLOSE
   25                | name . ARROW proc
   57 dotted: name . dot_seq
   58       | name . COLON event_set

    OPEN   shift, and go to state 145
    COLON  shift, and go to state 146
    DOT    shift, and go to state 147
    ARROW  shift, and go to state 148
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    $default  reduce using rule 21 (proc)

    dot_seq  go to state 151


state 195

   39 proc_minus_name: amb . GUARD proc

    GUARD  shift, and go to state 153


state 196

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   29                | proc NDET proc .
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    BOX   shift, and go to state 129
    SEMI  shift, and go to state 130

    $default  reduce using rule 29 (proc_minus_name)


state 197

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   28                | proc BOX proc .
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    SEMI  shift, and go to state 130

    $default  reduce using rule 28 (proc_minus_name)


state 198

   27 proc_minus_name: proc . SEMI proc
   27                | proc SEMI proc .
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    SEMI  shift, and go to state 130

    $default  reduce using rule 27 (proc_minus_name)


state 199

   82 bool: expr . AND expr
   83     | expr . OR expr
   83     | expr OR expr .
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    AND  shift, and go to state 132
    EQ   shift, and go to state 133
    NE   shift, and go to state 134
    LT   shift, and go to state 135
    LE   shift, and go to state 136
    GT   shift, and go to state 137
    GE   shift, and go to state 138

    $default  reduce using rule 83 (bool)


state 200

   82 bool: expr . AND expr
   82     | expr AND expr .
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    EQ  shift, and go to state 133
    NE  shift, and go to state 134
    LT  shift, and go to state 135
    LE  shift, and go to state 136
    GT  shift, and go to state 137
    GE  shift, and go to state 138

    $default  reduce using rule 82 (bool)


state 201

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   84     | expr EQ expr .
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    NE  shift, and go to state 134
    LT  shift, and go to state 135
    LE  shift, and go to state 136
    GT  shift, and go to state 137
    GE  shift, and go to state 138

    $default  reduce using rule 84 (bool)


state 202

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   85     | expr NE expr .
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    LT  shift, and go to state 135
    LE  shift, and go to state 136
    GT  shift, and go to state 137
    GE  shift, and go to state 138

    $default  reduce using rule 85 (bool)


state 203

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   86     | expr LT expr .
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    LE  shift, and go to state 136
    GT  shift, and go to state 137
    GE  shift, and go to state 138

    $default  reduce using rule 86 (bool)


state 204

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   88     | expr LE expr .
   89     | expr . GE expr

    GT  shift, and go to state 137
    GE  shift, and go to state 138

    $default  reduce using rule 88 (bool)


state 205

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   87     | expr GT expr .
   88     | expr . LE expr
   89     | expr . GE expr

    GE  shift, and go to state 138

    $default  reduce using rule 87 (bool)


state 206

   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr
   89     | expr GE expr .

    $default  reduce using rule 89 (bool)


state 207

   26 proc_minus_name: dotted ARROW proc .
   27                | proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    $default  reduce using rule 26 (proc_minus_name)


state 208

   95 num: num_plus . PLUS num_plus
   96    | num_plus . MINUS num_plus
   96    | num_plus MINUS num_plus .
   97    | num_plus . TIMES num_plus
   98    | num_plus . SLASH num_plus
   99    | num_plus . MOD num_plus

    MOD    shift, and go to state 142
    SLASH  shift, and go to state 143
    TIMES  shift, and go to state 144

    $default  reduce using rule 96 (num)


state 209

   95 num: num_plus . PLUS num_plus
   95    | num_plus PLUS num_plus .
   96    | num_plus . MINUS num_plus
   97    | num_plus . TIMES num_plus
   98    | num_plus . SLASH num_plus
   99    | num_plus . MOD num_plus

    MOD    shift, and go to state 142
    SLASH  shift, and go to state 143
    TIMES  shift, and go to state 144

    $default  reduce using rule 95 (num)


state 210

   95 num: num_plus . PLUS num_plus
   96    | num_plus . MINUS num_plus
   97    | num_plus . TIMES num_plus
   98    | num_plus . SLASH num_plus
   99    | num_plus . MOD num_plus
   99    | num_plus MOD num_plus .

    $default  reduce using rule 99 (num)


state 211

   95 num: num_plus . PLUS num_plus
   96    | num_plus . MINUS num_plus
   97    | num_plus . TIMES num_plus
   98    | num_plus . SLASH num_plus
   98    | num_plus SLASH num_plus .
   99    | num_plus . MOD num_plus

    $default  reduce using rule 98 (num)


state 212

   95 num: num_plus . PLUS num_plus
   96    | num_plus . MINUS num_plus
   97    | num_plus . TIMES num_plus
   97    | num_plus TIMES num_plus .
   98    | num_plus . SLASH num_plus
   99    | num_plus . MOD num_plus

    $default  reduce using rule 97 (num)


state 213

   24 proc_minus_name: name OPEN exprs . CLOSE
   46 exprs: exprs . COMMA expr

    CLOSE  shift, and go to state 259
    COMMA  shift, and go to state 155


state 214

   58 dotted: name COLON event_set .

    $default  reduce using rule 58 (dotted)


state 215

   67 event_set: name .

    $default  reduce using rule 67 (event_set)


state 216

   65 event_set: set .

    $default  reduce using rule 65 (event_set)


state 217

   66 event_set: commset .

    $default  reduce using rule 66 (event_set)


state 218

   59 dot_seq: DOT d_expr .
   62        | DOT d_expr . dot_seq

    DOT    shift, and go to state 147
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    $default  reduce using rule 59 (dot_seq)

    dot_seq  go to state 260


state 219

   70 d_expr: b_minus .

    $default  reduce using rule 70 (d_expr)


state 220

   69 d_expr: num .
  100 num_plus: num .

    MINUS     reduce using rule 100 (num_plus)
    PLUS      reduce using rule 100 (num_plus)
    MOD       reduce using rule 100 (num_plus)
    SLASH     reduce using rule 100 (num_plus)
    TIMES     reduce using rule 100 (num_plus)
    $default  reduce using rule 69 (d_expr)


state 221

   68 d_expr: name .
  101 num_plus: name .
  132 seqname: name .

    MINUS     reduce using rule 101 (num_plus)
    PLUS      reduce using rule 101 (num_plus)
    MOD       reduce using rule 101 (num_plus)
    SLASH     reduce using rule 101 (num_plus)
    TIMES     reduce using rule 101 (num_plus)
    CAT       reduce using rule 132 (seqname)
    $default  reduce using rule 68 (d_expr)


state 222

   74 d_expr: tuple .

    $default  reduce using rule 74 (d_expr)


state 223

   71 d_expr: set .

    $default  reduce using rule 71 (d_expr)


state 224

   72 d_expr: commset .

    $default  reduce using rule 72 (d_expr)


state 225

   73 d_expr: seq .
  131 seqname: seq .

    CAT       reduce using rule 131 (seqname)
    $default  reduce using rule 73 (d_expr)


state 226

   75 d_expr: amb .
  102 num_plus: amb .

    MINUS     reduce using rule 102 (num_plus)
    PLUS      reduce using rule 102 (num_plus)
    MOD       reduce using rule 102 (num_plus)
    SLASH     reduce using rule 102 (num_plus)
    TIMES     reduce using rule 102 (num_plus)
    $default  reduce using rule 75 (d_expr)


state 227

   25 proc_minus_name: name ARROW proc .
   27                | proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    $default  reduce using rule 25 (proc_minus_name)


state 228

   60 dot_seq: PLING d_expr .
   63        | PLING d_expr . dot_seq

    DOT    shift, and go to state 147
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    $default  reduce using rule 60 (dot_seq)

    dot_seq  go to state 261


state 229

   61 dot_seq: QUERY d_expr .
   64        | QUERY d_expr . dot_seq

    DOT    shift, and go to state 147
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    $default  reduce using rule 61 (dot_seq)

    dot_seq  go to state 262


state 230

  128 seq: seqname . CAT seqname
  128    | seqname CAT seqname .

    $default  reduce using rule 128 (seq)


state 231

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname
   39                | amb GUARD proc .

    $default  reduce using rule 39 (proc_minus_name)


state 232

   46 exprs: exprs COMMA expr .
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    OR   shift, and go to state 131
    AND  shift, and go to state 132
    EQ   shift, and go to state 133
    NE   shift, and go to state 134
    LT   shift, and go to state 135
    LE   shift, and go to state 136
    GT   shift, and go to state 137
    GE   shift, and go to state 138

    $default  reduce using rule 46 (exprs)


state 233

   16 seq_type: type DOT seq_type .

    $default  reduce using rule 16 (seq_type)


state 234

   20 datatype: name PIPE datatype .

    $default  reduce using rule 20 (datatype)


state 235

   37 proc_minus_name: CHAOS OPEN name CLOSE .

    $default  reduce using rule 37 (proc_minus_name)


state 236

   36 proc_minus_name: CHAOS OPEN set CLOSE .

    $default  reduce using rule 36 (proc_minus_name)


state 237

   46 exprs: exprs . COMMA expr
  112 tuple: OPEN expr COMMA exprs . CLOSE

    CLOSE  shift, and go to state 263
    COMMA  shift, and go to state 155


state 238

  136 targs: targs COMMA targ .

    $default  reduce using rule 136 (targs)


state 239

  100 num_plus: num .
  147 num_name: num .

    RBRACE    reduce using rule 147 (num_name)
    COMMA     reduce using rule 147 (num_name)
    GT        reduce using rule 147 (num_name)
    $default  reduce using rule 100 (num_plus)


state 240

  101 num_plus: name .
  148 num_name: name .

    RBRACE    reduce using rule 148 (num_name)
    COMMA     reduce using rule 148 (num_name)
    GT        reduce using rule 148 (num_name)
    $default  reduce using rule 101 (num_plus)


state 241

  139 targ: num_name DOTDOT num_name .

    $default  reduce using rule 139 (targ)


state 242

   77 dotteds: dotted COMMA dotted .

    $default  reduce using rule 77 (dotteds)


state 243

   57 dotted: name . dot_seq
   58       | name . COLON event_set

    COLON  shift, and go to state 146
    DOT    shift, and go to state 147
    PLING  shift, and go to state 149
    QUERY  shift, and go to state 150

    dot_seq  go to state 151


state 244

  114 set: UNION OPEN setnames CLOSE .

    $default  reduce using rule 114 (set)


state 245

  118 setnames: setname COMMA . setnames

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name      go to state 168
    set       go to state 169
    setnames  go to state 264
    setname   go to state 171
    commset   go to state 172
    amb       go to state 173


state 246

  116 set: DIFF OPEN setname COMMA . setname CLOSE

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 265
    commset  go to state 172
    amb      go to state 173


state 247

  115 set: INTER OPEN setnames CLOSE .

    $default  reduce using rule 115 (set)


state 248

  129 seq: HEAD OPEN seqname CLOSE .

    $default  reduce using rule 129 (seq)


state 249

  130 seq: TAIL OPEN seqname CLOSE .

    $default  reduce using rule 130 (seq)


state 250

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   33                | IF cond THEN proc . ELSE proc
   38                | proc . BACKSLASH setname

    ELSE       shift, and go to state 266
    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130


state 251

   44 proc_minus_name: PAR expr COLON setname . AT LSQUARE expr RSQUARE proc

    AT  shift, and go to state 267


state 252

   42 proc_minus_name: INTL expr COLON setname . AT proc

    AT  shift, and go to state 268


state 253

   40 proc_minus_name: NDET expr COLON setname . AT proc

    AT  shift, and go to state 269


state 254

   41 proc_minus_name: BOX expr COLON setname . AT proc

    AT  shift, and go to state 270


state 255

   43 proc_minus_name: SEMI expr COLON setname . AT proc

    AT  shift, and go to state 271


state 256

   32 proc_minus_name: proc LSQUARE setname PAR . setname RSQUARE proc

    NAME     shift, and go to state 2
    OPEN     shift, and go to state 112
    LBRACE   shift, and go to state 28
    LPBRACE  shift, and go to state 29
    UNION    shift, and go to state 30
    DIFF     shift, and go to state 31
    INTER    shift, and go to state 32

    name     go to state 168
    set      go to state 169
    setname  go to state 272
    commset  go to state 172
    amb      go to state 173


state 257

   10 newline0: NEWLINE .

    $default  reduce using rule 10 (newline0)


state 258

   31 proc_minus_name: proc LCOMM setname newline0 . RCOMM proc

    RCOMM  shift, and go to state 273


state 259

   24 proc_minus_name: name OPEN exprs CLOSE .

    $default  reduce using rule 24 (proc_minus_name)


state 260

   62 dot_seq: DOT d_expr dot_seq .

    $default  reduce using rule 62 (dot_seq)


state 261

   63 dot_seq: PLING d_expr dot_seq .

    $default  reduce using rule 63 (dot_seq)


state 262

   64 dot_seq: QUERY d_expr dot_seq .

    $default  reduce using rule 64 (dot_seq)


state 263

  112 tuple: OPEN expr COMMA exprs CLOSE .

    $default  reduce using rule 112 (tuple)


state 264

  118 setnames: setname COMMA setnames .

    $default  reduce using rule 118 (setnames)


state 265

  116 set: DIFF OPEN setname COMMA setname . CLOSE

    CLOSE  shift, and go to state 274


state 266

   33 proc_minus_name: IF cond THEN proc ELSE . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 275
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 267

   44 proc_minus_name: PAR expr COLON setname AT . LSQUARE expr RSQUARE proc

    LSQUARE  shift, and go to state 276


state 268

   42 proc_minus_name: INTL expr COLON setname AT . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 277
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 269

   40 proc_minus_name: NDET expr COLON setname AT . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 278
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 270

   41 proc_minus_name: BOX expr COLON setname AT . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 279
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 271

   43 proc_minus_name: SEMI expr COLON setname AT . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 280
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 272

   32 proc_minus_name: proc LSQUARE setname PAR setname . RSQUARE proc

    RSQUARE  shift, and go to state 281


state 273

   31 proc_minus_name: proc LCOMM setname newline0 RCOMM . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 282
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 274

  116 set: DIFF OPEN setname COMMA setname CLOSE .

    $default  reduce using rule 116 (set)


state 275

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   33                | IF cond THEN proc ELSE proc .
   38                | proc . BACKSLASH setname

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    $default  reduce using rule 33 (proc_minus_name)


state 276

   44 proc_minus_name: PAR expr COLON setname AT LSQUARE . expr RSQUARE proc

    NAME      shift, and go to state 2
    NUMBER    shift, and go to state 24
    CSPTRUE   shift, and go to state 25
    CSPFALSE  shift, and go to state 26
    OPEN      shift, and go to state 62
    LBRACE    shift, and go to state 28
    LPBRACE   shift, and go to state 29
    UNION     shift, and go to state 30
    DIFF      shift, and go to state 31
    INTER     shift, and go to state 32
    HEAD      shift, and go to state 33
    TAIL      shift, and go to state 34
    NOT       shift, and go to state 41
    LT        shift, and go to state 42
    MINUS     shift, and go to state 43
    HASH      shift, and go to state 44

    expr             go to state 283
    expr_minus_name  go to state 65
    dotted           go to state 66
    bool             go to state 51
    b_minus          go to state 52
    num              go to state 53
    num_plus         go to state 54
    name             go to state 67
    tuple            go to state 56
    set              go to state 57
    commset          go to state 58
    seq              go to state 59
    seqname          go to state 60
    amb              go to state 68


state 277

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname
   42                | INTL expr COLON setname AT proc .

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    $default  reduce using rule 42 (proc_minus_name)


state 278

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname
   40                | NDET expr COLON setname AT proc .

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    $default  reduce using rule 40 (proc_minus_name)


state 279

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname
   41                | BOX expr COLON setname AT proc .

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    $default  reduce using rule 41 (proc_minus_name)


state 280

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname
   43                | SEMI expr COLON setname AT proc .

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    $default  reduce using rule 43 (proc_minus_name)


state 281

   32 proc_minus_name: proc LSQUARE setname PAR setname RSQUARE . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 284
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 282

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   31                | proc LCOMM setname newline0 RCOMM proc .
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname

    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    LSQUARE  error (nonassociative)
    LCOMM    error (nonassociative)

    $default  reduce using rule 31 (proc_minus_name)


state 283

   44 proc_minus_name: PAR expr COLON setname AT LSQUARE expr . RSQUARE proc
   82 bool: expr . AND expr
   83     | expr . OR expr
   84     | expr . EQ expr
   85     | expr . NE expr
   86     | expr . LT expr
   87     | expr . GT expr
   88     | expr . LE expr
   89     | expr . GE expr

    RSQUARE  shift, and go to state 285
    OR       shift, and go to state 131
    AND      shift, and go to state 132
    EQ       shift, and go to state 133
    NE       shift, and go to state 134
    LT       shift, and go to state 135
    LE       shift, and go to state 136
    GT       shift, and go to state 137
    GE       shift, and go to state 138


state 284

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   32                | proc LSQUARE setname PAR setname RSQUARE proc .
   38                | proc . BACKSLASH setname

    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    LSQUARE  error (nonassociative)
    LCOMM    error (nonassociative)

    $default  reduce using rule 32 (proc_minus_name)


state 285

   44 proc_minus_name: PAR expr COLON setname AT LSQUARE expr RSQUARE . proc

    STOP   shift, and go to state 21
    SKIP   shift, and go to state 22
    CHAOS  shift, and go to state 23
    NAME   shift, and go to state 2
    OPEN   shift, and go to state 191
    IF     shift, and go to state 35
    PAR    shift, and go to state 36
    INTL   shift, and go to state 37
    NDET   shift, and go to state 38
    BOX    shift, and go to state 39
    SEMI   shift, and go to state 40

    proc             go to state 286
    proc_minus_name  go to state 47
    dotted           go to state 193
    name             go to state 194
    amb              go to state 195


state 286

   27 proc_minus_name: proc . SEMI proc
   28                | proc . BOX proc
   29                | proc . NDET proc
   30                | proc . INTL proc
   31                | proc . LCOMM setname newline0 RCOMM proc
   32                | proc . LSQUARE setname PAR setname RSQUARE proc
   38                | proc . BACKSLASH setname
   44                | PAR expr COLON setname AT LSQUARE expr RSQUARE proc .

    LSQUARE    shift, and go to state 124
    LCOMM      shift, and go to state 125
    BACKSLASH  shift, and go to state 126
    INTL       shift, and go to state 127
    NDET       shift, and go to state 128
    BOX        shift, and go to state 129
    SEMI       shift, and go to state 130

    $default  reduce using rule 44 (proc_minus_name)
