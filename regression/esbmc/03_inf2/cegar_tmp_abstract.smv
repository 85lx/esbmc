-- automatically generated by CPROVER/SATABS

-- threads: 1

MODULE main

-- variables of the abstract program

VAR b0: boolean; -- SAME-OBJECT(st1->z, NULL)
VAR b1: boolean; -- SAME-OBJECT(st2->z, NULL)
VAR b2: boolean; -- st1->x > 0
VAR b3: boolean; -- st2->y > 0

DEFINE runs:=1;

-- program counter
-- 89 is the "terminating" PC

VAR PC: 0..89;

-- initial PC

ASSIGN init(PC):=0;

-- non-deterministic choice

VAR nondet2: boolean;
VAR nondet7: boolean;
VAR nondet8: boolean;
VAR nondet9: boolean;
VAR nondet3: boolean;
VAR nondet4: boolean;
VAR nondet0: boolean;
VAR nondet5: boolean;
VAR nondet1: boolean;
VAR nondet6: boolean;

-- guards

DEFINE guard18:=!nondet0 & nondet1 & nondet2;
-- file main.c line 16 function st_alloc
DEFINE guard23:=nondet3;
-- file main.c line 16 function st_alloc
DEFINE guard24:=1;
-- file main.c line 16 function st_alloc
DEFINE guard25:=nondet4;
-- file main.c line 16 function st_alloc
DEFINE guard26:=1;
DEFINE guard30:=1;
DEFINE guard35:=!nondet5 & nondet6 & nondet7;
DEFINE guard48:=!nondet0 & nondet1 & nondet2;
-- file main.c line 16 function st_alloc
DEFINE guard53:=nondet3;
-- file main.c line 16 function st_alloc
DEFINE guard54:=1;
-- file main.c line 16 function st_alloc
DEFINE guard55:=nondet4;
-- file main.c line 16 function st_alloc
DEFINE guard56:=1;
DEFINE guard60:=1;
DEFINE guard65:=!nondet5 & nondet6 & nondet7;
-- file main.c line 30 function st_compact
DEFINE guard76:=b0;
-- file main.c line 30 function st_compact
DEFINE guard77:=nondet8;
-- file main.c line 30 function st_compact
DEFINE guard78:=1;
-- file main.c line 31 function st_compact
DEFINE guard79:=b1;
-- file main.c line 31 function st_compact
DEFINE guard80:=nondet9;
-- file main.c line 31 function st_compact
DEFINE guard81:=1;
-- file main.c line 32 function st_compact
DEFINE guard82:=b2;
-- file main.c line 33 function st_compact
DEFINE guard83:=b3;
DEFINE guard84:=1;
-- file main.c line 58 function main
DEFINE guard86:=1;

-- control flow

ASSIGN next(PC):=case
    !runs: PC;
    -- file <built-in> line 12
    PC=0: 1; -- assign
    -- file <built-in> line 13
    PC=1: 2; -- assign
    -- file <built-in> line 14
    PC=2: 3; -- assign
    -- file <built-in> line 19
    PC=3: 4; -- assign
    PC=4: 5; -- function call
    -- file main.c line 47 function main
    PC=5: 6; -- other
    -- file main.c line 47 function main
    PC=6: 7; -- other
    -- file main.c line 48 function main
    PC=7: 8; -- other
    -- file main.c line 48 function main
    PC=8: 9; -- other
    -- file main.c line 51 function main
    PC=9: 10; -- location
    -- file main.c line 51 function main
    PC=10: 11; -- other
    -- file main.c line 52 function main
    PC=11: 12; -- location
    -- file main.c line 52 function main
    PC=12: 13; -- other
    -- file main.c line 54 function main
    PC=13: 14; -- assign
    -- file main.c line 54 function main
    PC=14: 15; -- assign
    -- file main.c line 54 function main
    PC=15: 16; -- function call
    -- file main.c line 15 function st_alloc
    PC=16: 17; -- other
    -- file main.c line 15 function st_alloc
    PC=17: 18; -- assign
    PC=18: case  -- assume/assert
      guard18: 19;
      1: 18;
    esac;
    -- file main.c line 15 function st_alloc
    PC=19: 20; -- assign
    -- file main.c line 15 function st_alloc
    PC=20: 21; -- assign
    -- file main.c line 15 function st_alloc
    PC=21: 22; -- other
    -- file main.c line 15 function st_alloc
    PC=22: 23; -- assign
    -- file main.c line 16 function st_alloc
    PC=23: case  -- goto (with guard)
      guard23: 25;
      1: 24;
    esac;
    -- file main.c line 16 function st_alloc
    PC=24: 31; -- goto (without guard)
    -- file main.c line 16 function st_alloc
    PC=25: case  -- goto (with guard)
      guard25: 27;
      1: 26;
    esac;
    -- file main.c line 16 function st_alloc
    PC=26: 31; -- goto (without guard)
    -- file main.c line 17 function st_alloc
    PC=27: 28; -- assign
    -- file main.c line 18 function st_alloc
    PC=28: 29; -- assign
    -- file main.c line 19 function st_alloc
    PC=29: 30; -- assign
    PC=30: 39; -- goto (without guard)
    -- file main.c line 22 function st_alloc
    PC=31: 32; -- assign
    -- file main.c line 23 function st_alloc
    PC=32: 33; -- assign
    -- file main.c line 24 function st_alloc
    PC=33: 34; -- other
    -- file main.c line 24 function st_alloc
    PC=34: 35; -- assign
    PC=35: case  -- assume/assert
      guard35: 36;
      1: 35;
    esac;
    -- file main.c line 24 function st_alloc
    PC=36: 37; -- assign
    -- file main.c line 24 function st_alloc
    PC=37: 38; -- assign
    -- file main.c line 24 function st_alloc
    PC=38: 39; -- assign
    -- file main.c line 26 function st_alloc
    PC=39: 40; -- assign
    -- file main.c line 26 function st_alloc
    PC=40: 41; -- return
    -- file main.c line 27 function st_alloc
    PC=41: 42; -- end_function
    -- file main.c line 54 function main
    PC=42: 43; -- assign
    -- file main.c line 55 function main
    PC=43: 44; -- assign
    -- file main.c line 55 function main
    PC=44: 45; -- assign
    -- file main.c line 55 function main
    PC=45: 46; -- function call
    -- file main.c line 15 function st_alloc
    PC=46: 47; -- other
    -- file main.c line 15 function st_alloc
    PC=47: 48; -- assign
    PC=48: case  -- assume/assert
      guard48: 49;
      1: 48;
    esac;
    -- file main.c line 15 function st_alloc
    PC=49: 50; -- assign
    -- file main.c line 15 function st_alloc
    PC=50: 51; -- assign
    -- file main.c line 15 function st_alloc
    PC=51: 52; -- other
    -- file main.c line 15 function st_alloc
    PC=52: 53; -- assign
    -- file main.c line 16 function st_alloc
    PC=53: case  -- goto (with guard)
      guard53: 55;
      1: 54;
    esac;
    -- file main.c line 16 function st_alloc
    PC=54: 61; -- goto (without guard)
    -- file main.c line 16 function st_alloc
    PC=55: case  -- goto (with guard)
      guard55: 57;
      1: 56;
    esac;
    -- file main.c line 16 function st_alloc
    PC=56: 61; -- goto (without guard)
    -- file main.c line 17 function st_alloc
    PC=57: 58; -- assign
    -- file main.c line 18 function st_alloc
    PC=58: 59; -- assign
    -- file main.c line 19 function st_alloc
    PC=59: 60; -- assign
    PC=60: 69; -- goto (without guard)
    -- file main.c line 22 function st_alloc
    PC=61: 62; -- assign
    -- file main.c line 23 function st_alloc
    PC=62: 63; -- assign
    -- file main.c line 24 function st_alloc
    PC=63: 64; -- other
    -- file main.c line 24 function st_alloc
    PC=64: 65; -- assign
    PC=65: case  -- assume/assert
      guard65: 66;
      1: 65;
    esac;
    -- file main.c line 24 function st_alloc
    PC=66: 67; -- assign
    -- file main.c line 24 function st_alloc
    PC=67: 68; -- assign
    -- file main.c line 24 function st_alloc
    PC=68: 69; -- assign
    -- file main.c line 26 function st_alloc
    PC=69: 70; -- assign
    -- file main.c line 26 function st_alloc
    PC=70: 71; -- return
    -- file main.c line 27 function st_alloc
    PC=71: 72; -- end_function
    -- file main.c line 55 function main
    PC=72: 73; -- assign
    -- file main.c line 57 function main
    PC=73: 74; -- assign
    -- file main.c line 57 function main
    PC=74: 75; -- assign
    -- file main.c line 57 function main
    PC=75: 76; -- function call
    -- file main.c line 30 function st_compact
    PC=76: case  -- assume/assert
      guard76: 77;
      1: 76;
    esac;
    -- file main.c line 30 function st_compact
    PC=77: case  -- goto (with guard)
      guard77: 79;
      1: 78;
    esac;
    -- file main.c line 30 function st_compact
    PC=78: 78; -- goto (without guard)
    -- file main.c line 31 function st_compact
    PC=79: case  -- assume/assert
      guard79: 80;
      1: 79;
    esac;
    -- file main.c line 31 function st_compact
    PC=80: case  -- goto (with guard)
      guard80: 82;
      1: 81;
    esac;
    -- file main.c line 31 function st_compact
    PC=81: 81; -- goto (without guard)
    -- file main.c line 32 function st_compact
    PC=82: case  -- assume/assert
      guard82: 83;
      1: 82;
    esac;
    -- file main.c line 33 function st_compact
    PC=83: case  -- assume/assert
      guard83: 84;
      1: 83;
    esac;
    PC=84: 84; -- goto (without guard)
    -- file main.c line 44 function st_compact
    PC=85: 86; -- end_function
    -- file main.c line 58 function main
    PC=86: 86; -- goto (without guard)
    -- file main.c line 60 function main
    PC=87: 88; -- end_function
    PC=88: 89; -- end_function
    -- infinite loop for termination
    PC=89: 89;
  esac;

-- the transition constraints

-- file <built-in> line 12
    -- FROM Predicates:
TRANS (PC=0 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file <built-in> line 13
    -- FROM Predicates:
TRANS (PC=1 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file <built-in> line 14
    -- FROM Predicates:
TRANS (PC=2 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file <built-in> line 19
    -- FROM Predicates:
TRANS (PC=3 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=4 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 47 function main
    -- FROM Predicates:
TRANS (PC=5 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 47 function main
    -- FROM Predicates:
TRANS (PC=6 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 48 function main
    -- FROM Predicates:
TRANS (PC=7 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 48 function main
    -- FROM Predicates:
TRANS (PC=8 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 51 function main
    -- FROM Predicates:
TRANS (PC=9 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 51 function main
    -- FROM Predicates:
TRANS (PC=10 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 52 function main
    -- FROM Predicates:
TRANS (PC=11 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 52 function main
    -- FROM Predicates:
TRANS (PC=12 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 54 function main
    -- FROM Predicates:
TRANS (PC=13 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 54 function main
    -- FROM Predicates:
TRANS (PC=14 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 54 function main
    -- FROM Predicates:
TRANS (PC=15 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=16 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=17 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=18 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=19 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=20 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=21 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=22 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=23 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=24 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=25 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=26 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 17 function st_alloc
    -- FROM Predicates:
TRANS (PC=27 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 18 function st_alloc
    -- FROM Predicates:
TRANS (PC=28 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 19 function st_alloc
    -- FROM Predicates:
TRANS (PC=29 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=30 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 22 function st_alloc
    -- FROM Predicates:
TRANS (PC=31 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 23 function st_alloc
    -- FROM Predicates:
TRANS (PC=32 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=33 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=34 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=35 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=36 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=37 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=38 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 26 function st_alloc
    -- FROM Predicates:
TRANS (PC=39 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 26 function st_alloc
    -- FROM Predicates:
TRANS (PC=40 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 27 function st_alloc
    -- FROM Predicates:
TRANS (PC=41 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 54 function main
    -- FROM Predicates:
TRANS (PC=42 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 55 function main
    -- FROM Predicates:
TRANS (PC=43 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 55 function main
    -- FROM Predicates:
TRANS (PC=44 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 55 function main
    -- FROM Predicates:
TRANS (PC=45 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=46 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=47 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=48 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=49 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=50 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=51 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 15 function st_alloc
    -- FROM Predicates:
TRANS (PC=52 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=53 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=54 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=55 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 16 function st_alloc
    -- FROM Predicates:
TRANS (PC=56 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 17 function st_alloc
    -- FROM Predicates:
TRANS (PC=57 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 18 function st_alloc
    -- FROM Predicates:
TRANS (PC=58 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 19 function st_alloc
    -- FROM Predicates:
TRANS (PC=59 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=60 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 22 function st_alloc
    -- FROM Predicates:
TRANS (PC=61 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 23 function st_alloc
    -- FROM Predicates:
TRANS (PC=62 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=63 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=64 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=65 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=66 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=67 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 24 function st_alloc
    -- FROM Predicates:
TRANS (PC=68 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 26 function st_alloc
    -- FROM Predicates:
TRANS (PC=69 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 26 function st_alloc
    -- FROM Predicates:
TRANS (PC=70 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 27 function st_alloc
    -- FROM Predicates:
TRANS (PC=71 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 55 function main
    -- FROM Predicates:
TRANS (PC=72 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 57 function main
    -- FROM Predicates:
TRANS (PC=73 & runs) -> next(b1)=b1
              & next(b3)=b3
    -- TO Predicates: b0 b2
-- file main.c line 57 function main
    -- FROM Predicates:
TRANS (PC=74 & runs) -> next(b0)=b0
              & next(b2)=b2
    -- TO Predicates: b1 b3
-- file main.c line 57 function main
    -- FROM Predicates:
TRANS (PC=75 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 30 function st_compact
    -- FROM Predicates:
TRANS (PC=76 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 30 function st_compact
    -- FROM Predicates:
TRANS (PC=77 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 30 function st_compact
    -- FROM Predicates:
TRANS (PC=78 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 31 function st_compact
    -- FROM Predicates:
TRANS (PC=79 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 31 function st_compact
    -- FROM Predicates:
TRANS (PC=80 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 31 function st_compact
    -- FROM Predicates:
TRANS (PC=81 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 32 function st_compact
    -- FROM Predicates:
TRANS (PC=82 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 33 function st_compact
    -- FROM Predicates:
TRANS (PC=83 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=84 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 44 function st_compact
    -- FROM Predicates:
TRANS (PC=85 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 58 function main
    -- FROM Predicates:
TRANS (PC=86 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- file main.c line 60 function main
    -- FROM Predicates:
TRANS (PC=87 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
    -- FROM Predicates:
TRANS (PC=88 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3
    -- TO Predicates:
-- termination
TRANS (PC=89 & runs) -> next(b0)=b0
              & next(b1)=b1 & next(b2)=b2
              & next(b3)=b3

-- the specification

-- file main.c line 30 function st_compact
SPEC AG ((PC=76 & runs) -> guard76)
-- file main.c line 31 function st_compact
SPEC AG ((PC=79 & runs) -> guard79)
-- file main.c line 32 function st_compact
SPEC AG ((PC=82 & runs) -> guard82)
-- file main.c line 33 function st_compact
SPEC AG ((PC=83 & runs) -> guard83)

