Test '00_big_endian_01'
  Input: main.c
  Output: main.out
  Options: --big-endian --z3-bv
  Results:
    ^VERIFICATION FAILED$
Running esbmc --big-endian --z3-bv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_big_endian_02'
  Input: main.c
  Output: main.out
  Options: --big-endian --z3-bv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --big-endian --z3-bv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_bitshift_01'
  Input: main.c
  Output: main.out
  Options: --z3-ir --no-slice
  Results:
    ^VERIFICATION FAILED$
Running esbmc --z3-ir --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_bitshift_02'
  Input: main.c
  Output: main.out
  Options: --z3-bv --no-slice
  Results:
    ^VERIFICATION FAILED$
Running esbmc --z3-bv --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_bitshift_03'
  Input: main.c
  Output: main.out
  Options: --z3-bv --no-slice
  Results:
    ^VERIFICATION FAILED$
Running esbmc --z3-bv --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_c_enum'
  Input: main.c
  Output: main.out
  Options: --z3-bv --no-slice
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --z3-bv --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_little_endian_01'
  Input: main.c
  Output: main.out
  Options: --little-endian
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --little-endian main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_little_endian_02'
  Input: main.c
  Output: main.out
  Options: --little-endian
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --little-endian main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_little_endian_03'
  Input: main.c
  Output: main.out
  Options: --little-endian
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --little-endian main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_little_endian_04'
  Input: main.c
  Output: main.out
  Options: --little-endian --z3-bv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --little-endian --z3-bv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_memory_leak_01'
  Input: main.c
  Output: main.out
  Options: --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_01_0'
  Input: main.c
  Output: main.out
  Options: --claim 2 --memory-leak-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 2 --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_memory_leak_01_1'
  Input: main.c
  Output: main.out
  Options: --claim 3 --memory-leak-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 3 --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_memory_leak_02'
  Input: main.c
  Output: main.out
  Options: --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_03'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_04'
  Input: main.c
  Output: main.out
  Options: --unwind 1 --no-slice --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1 --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_05'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_06'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_07'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_memory_leak_08'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_09'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_10'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_11'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [FAILED]

Test '00_memory_leak_12'
  Input: main.c
  Output: main.out
  Options: --memory-leak-check --claim 3
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --memory-leak-check --claim 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_memory_leak_13'
  Input: main.c
  Output: main.out
  Options: --memory-leak-check --claim 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --memory-leak-check --claim 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_14'
  Input: main.c
  Output: main.out
  Options: --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_15'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_memory_leak_16'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_memory_leak_17'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_MADWiFi__giwscan_cb_bad'
  Input: main.c
  Output: main.out
  Options: --no-slice
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_MADWiFi__no_sprintf_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_MADWiFi__no_sprintf_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__anyMeta_int_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__anyMeta_int_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 5 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 5 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__anyMeta_ptr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__anyMeta_ptr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 5 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 5 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__bounds_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__bounds_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__glob2_int_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__glob2_int_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__glob2_ptr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__glob2_ptr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__loop_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__loop_int_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__loop_int_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__loop_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__loop_ptr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__loop_ptr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__noAnyMeta_int_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__noAnyMeta_int_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_NetBSD-libc__noAnyMeta_ptr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_NetBSD-libc__noAnyMeta_ptr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 5 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 5 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__OpenSER__cases1_stripFullEnd_arr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullBoth_arr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullBoth_arr_inlined_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullBoth_arr_inlined_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullBoth_arr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullEnd_arr_inlined_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 9
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 9 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullEnd_arr_inlined_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 9
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 9 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullEnd_arr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullStart_arr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullStart_arr_inlined_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullStart_arr_inlined_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripFullStart_arr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripNone_arr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripNone_arr_inlined_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripNone_arr_inlined_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripNone_arr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesBoth_arr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesBoth_arr_inlined_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesBoth_arr_inlined_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesBoth_arr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesEnd_arr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesEnd_arr_inlined_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesEnd_arr_inlined_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_OpenSER__cases1_stripSpacesEnd_arr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_SpamAssassin__loop_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 7
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 7 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_SpamAssassin__loop_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 7
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 7 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_apache__full_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_apache__full_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_apache__full_ptr_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_apache__full_ptr_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_apache__simp2_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_apache__simp2_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_apache__simp3_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_apache__simp3_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_apache__strncmp_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_apache__strncmp_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_bind__expands_vars_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_bind__expands_vars_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 14
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 14 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_gxine__simp_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_gxine__simp_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_libgd__gd_no_entities_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_libgd__gd_no_entities_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_libgd__gd_simp_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_libgd__gd_simp_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_samba__simp_bad'
  Input: main.c
  Output: main.out
  Options: --overflow-check --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_samba__simp_ok'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__both_bad'
  Input: main.c
  Output: main.out
  Options: --string-abstraction --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --string-abstraction --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__both_ok'
  Input: main.c
  Output: main.out
  Options: --string-abstraction --unwind 5
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__close-angle_ptr_no_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__close-angle_ptr_no_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__inner_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__inner_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_one_char_heavy_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_one_char_heavy_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_one_char_med_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_one_char_med_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_one_char_no_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_one_char_no_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 10 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_three_chars_med_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 2
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__mime7to8_arr_three_chars_med_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 2 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 2 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__mime7to8_ptr_one_char_heavy_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__mime7to8_ptr_one_char_heavy_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 3 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 3 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__mime7to8_ptr_three_chars_med_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__mime7to8_ptr_three_chars_med_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__mime7to8_ptr_three_chars_no_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__mime7to8_ptr_three_chars_no_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 3 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 3 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__outer_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__outer_ok'
  Input: main.c
  Output: main.out
  Options: --string-abstraction --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__prescan_arr_med_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__prescan_arr_med_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__prescan_arr_min_test_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__prescan_arr_min_test_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__tTflag_arr_one_loop_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_sendmail__tTflag_arr_one_loop_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_sendmail__util-bad'
  Input: main.c
  Output: main.out
  Options: --unwind 2
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_wu-ftpd__simple_bad'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_wu-ftpd__simple_ok'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '00_verisec_wu-ftpd__small_invalid'
  Input: main.c
  Output: main.out
  Options: --unwind 4
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_wu-ftpd__strcpy_strcat_bad'
  Input: main.c
  Output: main.out
  Options: --string-abstraction --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --string-abstraction --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '00_verisec_wu-ftpd__strcpy_strcat_ok'
  Input: main.c
  Output: main.out
  Options: --string-abstraction --unwind 5
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc-return_void'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_ASHR'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_ASHR2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Anonymous_Struct1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Anonymous_Struct2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Array_Access1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Array_Access2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Array_Access3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Array_Initialization1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Array_Initialization2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Array_Initialization3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Array_Pointer1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Array_Pointer2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Array_Pointer3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Array_Pointer4'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Array_Pointer5'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Assignment_to_typecast'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_BV_Arithmetic1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=10$
    ^SIGNAL=0$
    ^VERIFICATION FAILED$
    --
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=10$ [FAILED]
^SIGNAL=0$ [OK]
^VERIFICATION FAILED$ [FAILED]

Test '01_cbmc_BV_Arithmetic2'
  Input: main.c
  Output: main.out
  Options: --decide --unwind 32
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide --unwind 32 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_BV_Arithmetic3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_BV_Arithmetic4'
  Input: main.c
  Output: main.out
  Options: --decide --unwind 32
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide --unwind 32 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_BV_Arithmetic5'
  Input: main.c
  Output: main.out
  Options: --decide --unwind 32
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide --unwind 32 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Bitfields'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Bool1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Boolean_Guards1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Defines1'
  Input: main.c
  Output: main.out
  Options: --decide -D NEW_DEFINE
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide -D NEW_DEFINE main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Division'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Division_Assignment'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Ellipsis'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Empty_Declaration1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^SIGNAL=0$
    ^EXIT=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^SIGNAL=0$ [OK]
^EXIT=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_End_thread1'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION SUCCESSFUL$
  Results:
    
Running esbmc ^VERIFICATION SUCCESSFUL$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]
 [OK]

Test '01_cbmc_Extern'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_ExternExtern2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_ExternExtern3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_ExternFailed_Symbols1'
  Input: main.c
  Output: main.out
  Options: --decide --no-pointer-check
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide --no-pointer-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_ExternFailing_Assert1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_ExternFixedbv1'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_ExternFixedbv2'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Fixedbv1'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Fixedbv2'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Fixedbv3'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Fixedbv4'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Fixedbv5'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Fixedbv6'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Fixedbv7'
  Input: main.c
  Output: main.out
  Options: --fixedbv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --fixedbv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Forward_Declaration1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^SIGNAL=0$
    ^EXIT=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^SIGNAL=0$ [OK]
^EXIT=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Forward_Declaration2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^SIGNAL=0$
    ^CONVERSION ERROR$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]
^SIGNAL=0$ [OK]
^CONVERSION ERROR$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Free1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Free2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Free3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Free4'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [FAILED]

Test '01_cbmc_Free5'
  Input: main.c
  Output: main.out
  Options: --claim 2
  Results:
    ^VERIFICATION FAILED$
Running esbmc --claim 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Free6'
  Input: main.c
  Output: main.out
  Options: --claim 1
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Free7'
  Input: main.c
  Output: main.out
  Options: --no-slice --memory-leak-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice --memory-leak-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Function-KnR1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Function3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Function4'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Function5'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Function6'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Function7'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Function8'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Function9'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Function_Pointer1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Function_Pointer10'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Function_Pointer11'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer12'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer13'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Function_Pointer14'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Function_Pointer2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer4'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer5'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer6'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer7'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Function_Pointer8'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Function_Pointer9'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Global_Initialization'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Goto1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Goto2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Goto3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Goto4'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Goto5'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Goto6'
  Input: main.c
  Output: main.out
  Options: --decide --unwind 2
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide --unwind 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Goto7'
  Input: main.c
  Output: main.out
  Options: --decide --unwind 2
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide --unwind 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Incomplete_Type1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^SIGNAL=0$
    ^CONVERSION ERROR$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]
^SIGNAL=0$ [OK]
^CONVERSION ERROR$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Initialization1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Initialization2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Linked_List1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Linked_List2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Linking1'
  Input: main.c
  Output: main.out
  Options: module.c --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc module.c --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Linking2'
  Input: main.c
  Output: main.out
  Options: module.c --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc module.c --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_LongConst'
  Input: main.c
  Output: main.out
  Options: --16 --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --16 --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_MS_types1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Malloc1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc10'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc11'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc12'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc13'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc14'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION SUCCESSFUL$
  Results:
Running esbmc ^VERIFICATION SUCCESSFUL$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc15'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION SUCCESSFUL$
  Results:
Running esbmc ^VERIFICATION SUCCESSFUL$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc16'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION SUCCESSFUL$
  Results:
Running esbmc ^VERIFICATION SUCCESSFUL$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc17'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc18'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc19'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Malloc2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Malloc20'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [FAILED]

Test '01_cbmc_Malloc21'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Malloc22'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc23'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc24'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc25'
  Input: main.c
  Output: main.out
  Options: --no-slice
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc26'
  Input: main.c
  Output: main.out
  Options: --no-slice
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc27'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc28'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc3'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc4'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc5'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Malloc6'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Malloc7'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc8'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Malloc9'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION SUCCESSFUL$
  Results:
Running esbmc ^VERIFICATION SUCCESSFUL$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Mod1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Multi_Dimensional_Array1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Multiple'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Negation'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Nondet1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Overflow_Addition1'
  Input: main.c
  Output: main.out
  Options: --decide --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Pointer1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer10'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer11'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer12'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Pointer13'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Pointer14'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Pointer15'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Pointer16'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer17'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Pointer18'
  Input: main.c
  Output: main.out
  Options: --unwind 1 --no-unwinding-assertions
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --unwind 1 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Pointer19'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Pointer2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer20'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer21'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer22'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Pointer23'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Pointer24'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer25'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Pointer26'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Pointer27'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Pointer28'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer29'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer3'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Pointer4'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer5'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer6'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer7'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Pointer8'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Pointer9'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    
    ^VERIFICATION FAILED$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
 [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Recursion'
  Input: main.c
  Output: main.out
  Options: --decide --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Recursion2'
  Input: main.c
  Output: main.out
  Options: --no-unwinding-assertions --unwind 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --no-unwinding-assertions --unwind 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Recursion3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Recursive_Structure1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^SIGNAL=0$
    ^EXIT=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^SIGNAL=0$ [OK]
^EXIT=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Refinement1'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION SUCCESSFUL$
  Results:
Running esbmc ^VERIFICATION SUCCESSFUL$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Refinement6'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_Sideeffects1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Sizeof1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Statement_Expression1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Statement_Expression2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Static1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Static2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Static_Functions1'
  Input: file1.c
  Output: file1.out
  Options: file2.c
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc file2.c file1.c >file1.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_String1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_String2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_String3'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION FAILED$
  Results:
Running esbmc ^VERIFICATION FAILED$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '01_cbmc_String4'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_String_Abstraction1'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_String_Abstraction10'
  Input: main.c
  Output: main.out
  Options: --unwind 7
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 7 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_String_Abstraction2'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_String_Abstraction3'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_String_Abstraction4'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION FAILED$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_String_Abstraction5'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_String_Abstraction6'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION FAILED$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_String_Abstraction7'
  Input: main.c
  Output: main.out
  Options: --unwind 101
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 101 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_String_Abstraction8'
  Input: main.c
  Output: main.out
  Options: --string-abstraction --unwind 5
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_String_Abstraction9'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Struct_Array1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Struct_Bytewise1'
  Input: struct_bytewise.c
  Output: struct_bytewise.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  struct_bytewise.c >struct_bytewise.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Struct_Bytewise2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [FAILED]

Test '01_cbmc_Struct_Bytewise3'
  Input: struct_bytewise.c
  Output: struct_bytewise.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  struct_bytewise.c >struct_bytewise.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Struct_Hierarchy1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Struct_Initialization2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Struct_Initialization3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Struct_Pointer1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Structs1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Structs2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Structs3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Structs4'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Structs5'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_Structs6'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Structs7'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Unbounded_Array1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
    --
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_Unbounded_Array3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
    --
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Undef_Function1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_Unwinding_Locality1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc___func__1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_abs1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_argc1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_arraycomp'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [FAILED]

Test '01_cbmc_asm1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_charConst1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_character_handling1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_enum1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_enum2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_enum3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_error-label1'
  Input: main.c
  Output: main.out
  Options: --error-label ERROR
  Results:
    ^VERIFICATION FAILED$
Running esbmc --error-label ERROR main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_exit1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_for1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_for2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_for3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_function_option1'
  Input: main.c
  Output: main.out
  Options: --function f
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --function f main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_gcc_conditional_expr1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_if1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_if2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_if3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_if4'
  Input: main.c
  Output: main.out
  Options: --decide --boolector-bv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide --boolector-bv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [FAILED]

Test '01_cbmc_inline1'
  Input: main.c
  Output: main.out
  Options: module.c
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc module.c main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_label1'
  Input: main.c
  Output: main.out
  Options: --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_offsetof1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_return1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_return2'
  Input: tcas_v23_523.c
  Output: tcas_v23_523.out
  Options: --decide
  Results:
    ^VERIFICATION FAILED$
Running esbmc --decide tcas_v23_523.c >tcas_v23_523.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_switch1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_switch2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_switch3'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_switch4'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_switch5'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '01_cbmc_typedef1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_typedef_code'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_union1'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_union2'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_union3'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_union4'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_union5'
  Input: main.c
  Output: main.out
  Options: --decide
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --decide main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '01_cbmc_unsigned_char1'
  Input: main.c
  Output: main.out
  Options: --unsigned-char
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc --unsigned-char main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_void_ifthenelse'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^EXIT=0$
    ^SIGNAL=0$
    ^VERIFICATION SUCCESSFUL$
    --
    ^warning: ignoring
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^EXIT=0$ [OK]
^SIGNAL=0$ [OK]
^VERIFICATION SUCCESSFUL$ [OK]
^warning: ignoring [OK]

Test '01_cbmc_while1'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka01'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka02'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka03'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka04'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka05'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka06'
  Input: main.c
  Output: main.out
  Options: --unwind 20
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 20 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka07'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka08'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka09'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka10'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka11'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka12'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka13'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka14'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka15'
  Input: main.c
  Output: main.out
  Options: --unwind 5
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka16'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka17'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka18'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka19'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka20'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '02_eureka21'
  Input: main.c
  Output: main.out
  Options: --claim 1 --unwind 8
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 1 --unwind 8 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka22'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '02_eureka23'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_inf2'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec01'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec02'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec03'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec04'
  Input: main.c
  Output: main.out
  Options: --unwind 1000
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1000 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec05'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec06'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec07'
  Input: main.c
  Output: main.out
  Options: --unwind 250 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 250 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec08'
  Input: main.c
  Output: main.out
  Options: --unwind 100 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 100 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec09'
  Input: main.c
  Output: main.out
  Options: --unwind 10 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec09_01'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec11'
  Input: main.c
  Output: main.out
  Options: --unwind 1000
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1000 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec12'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec13'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec14'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec15'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec16'
  Input: main.c
  Output: main.out
  Options: --unwind 1000
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1000 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec17'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec18'
  Input: main.c
  Output: main.out
  Options: --unwind 150 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 150 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec19'
  Input: main.c
  Output: main.out
  Options: --unwind 100
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 100 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec20'
  Input: main.c
  Output: main.out
  Options: --unwind 1025
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1025 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec20_01'
  Input: main.c
  Output: main.out
  Options: --claim 1 --unwind 1025
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 1 --unwind 1025 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec20_02'
  Input: main.c
  Output: main.out
  Options: --claim 6 --unwind 1025
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 6 --unwind 1025 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec21'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec22'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec23'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec25'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec26'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec27'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec27_01'
  Input: main.c
  Output: main.out
  Options: --claim 1
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec29_01'
  Input: main.c
  Output: main.out
  Options: --unwind 101
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 101 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec29_02'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec30'
  Input: main.c
  Output: main.out
  Options: --unwind 150 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 150 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec31'
  Input: main.c
  Output: main.out
  Options: --unwind 8
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 8 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec32'
  Input: main.c
  Output: main.out
  Options: --unwind 1001
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 1001 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec33'
  Input: main.c
  Output: main.out
  Options: --unwind 100 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 100 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec34'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec37'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec38'
  Input: main.c
  Output: main.out
  Options: --string-abstraction
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec39'
  Input: main.c
  Output: main.out
  Options: --unwind 100
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 100 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '03_nec40'
  Input: main.c
  Output: main.out
  Options: --unwind 101
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 101 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '03_nec43'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION FAILED$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '04_bcnt'
  Input: main.c
  Output: main.out
  Options: --unwind 17
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 17 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '04_valgrind'
  Input: main.c
  Output: main.out
  Options: --no-slice
  Results:
    ^VERIFICATION FAILED$
Running esbmc --no-slice main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '05_blit'
  Input: main.c
  Output: main.out
  Options: --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '06_bs_new'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '07_crc'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '08_crc_new'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '09_fir'
  Input: main.c
  Output: main.out
  Options: --unwind 34
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 34 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '10_fir_new'
  Input: main.c
  Output: main.out
  Options: --unwind 34
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 34 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '11_insertsort_new'
  Input: main.c
  Output: main.out
  Options: --unwind 10
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '12_lms_new'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '13_ludcmp_new'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '14_pocsag_1'
  Input: main.c
  Output: main.out
  Options: --claim 2 --unwind 42
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 2 --unwind 42 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '14_pocsag_2'
  Input: main.c
  Output: main.out
  Options: --claim 1 --unwind 42
  Results:
    ^VERIFICATION FAILED$
Running esbmc --claim 1 --unwind 42 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '14_pocsag_3'
  Input: main.c
  Output: main.out
  Options: --claim 3 --unwind 42
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 3 --unwind 42 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '15_qurt_new_01'
  Input: main.c
  Output: main.out
  Options: --claim 1
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '15_qurt_new_02'
  Input: main.c
  Output: main.out
  Options: --claim 2
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '15_qurt_new_03'
  Input: main.c
  Output: main.out
  Options: --claim 3
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '15_qurt_new_04'
  Input: main.c
  Output: main.out
  Options: --claim 4
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 4 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '15_qurt_new_05'
  Input: main.c
  Output: main.out
  Options: --claim 5
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 5 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '15_qurt_new_06'
  Input: main.c
  Output: main.out
  Options: --claim 6
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 6 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '16_adpcm'
  Input: main.c
  Output: main.out
  Options: --unwind 100
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 100 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '17_apache'
  Input: main.c
  Output: main.out
  Options: --function ap_cpystrn --unwind 200
  Results:
    ^VERIFICATION FAILED$
Running esbmc --function ap_cpystrn --unwind 200 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '18_bind'
  Input: main.c
  Output: main.out
  Options: --function dn_expand --unwind 1
  Results:
    ^VERIFICATION FAILED$
Running esbmc --function dn_expand --unwind 1 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '19_arithmetic_operators'
  Input: main.c
  Output: main.out
  Options: ^VERIFICATION SUCCESSFUL$
  Results:
Running esbmc ^VERIFICATION SUCCESSFUL$ main.c >main.out 2>&1
  Exit: 6
  Signal: 0
  Core: 0
Execution [OK]

Test '20_flex'
  Input: main.c
  Output: main.out
  Options: --unwind 1 --z3-ir
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1 --z3-ir main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '21_printtokens2'
  Input: main.c
  Output: main.out
  Options: --z3-ir --partial-loops --unwind 1 --claim 11
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --z3-ir --partial-loops --unwind 1 --claim 11 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '22_schedule2'
  Input: main.c
  Output: main.out
  Options: --unwind 2 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 2 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '23_picosat-846_01'
  Input: main.c
  Output: main.out
  Options: app.c picosat.c --unwind 2
  Results:
    ^VERIFICATION FAILED$
Running esbmc app.c picosat.c --unwind 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '23_picosat-846_02'
  Input: main.c
  Output: main.out
  Options: app.c picosat.c --unwind 1 --partial-loops --function picosat_print --z3-bv
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc app.c picosat.c --unwind 1 --partial-loops --function picosat_print --z3-bv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '23_picosat-846_03'
  Input: main.c
  Output: main.out
  Options: app.c picosat.c --unwind 1 --partial-loops --function picosat_deref_toplevel --z3-bv
  Results:
    ^VERIFICATION FAILED$
Running esbmc app.c picosat.c --unwind 1 --partial-loops --function picosat_deref_toplevel --z3-bv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '23_picosat-846_04'
  Input: main.c
  Output: main.out
  Options: app.c picosat.c --unwind 1 --partial-loops --function picosat_assume
  Results:
    ^VERIFICATION FAILED$
Running esbmc app.c picosat.c --unwind 1 --partial-loops --function picosat_assume main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '23_picosat-846_05'
  Input: main.c
  Output: main.out
  Options: app.c picosat.c --unwind 1 --partial-loops --function picosat_add
  Results:
    ^VERIFICATION FAILED$
Running esbmc app.c picosat.c --unwind 1 --partial-loops --function picosat_add main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '24_pids_01'
  Input: main.c
  Output: main.out
  Options: --unwind 1 --partial-loops
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1 --partial-loops main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '25_git-remote-gitkrb5'
  Input: main.c
  Output: main.out
  Options: --unwind 2
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 2 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '26_exStbKey'
  Input: main.c
  Output: main.out
  Options: --unwind 1 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 1 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '27_exStbFb'
  Input: main.c
  Output: main.out
  Options: --string-abstraction --unwind 1 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --string-abstraction --unwind 1 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test '28_fm'
  Input: main.c
  Output: main.out
  Options: --overflow-check --boolector-bv
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check --boolector-bv main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '29_exStbHwAcc'
  Input: main.c
  Output: main.out
  Options: --overflow-check --string-abstraction --unwind 3
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check --string-abstraction --unwind 3 main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test '30_compress'
  Input: main.c
  Output: main.out
  Options: --unwind 4 --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 4 --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_01_addition'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test 'overflow_02_sub'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test 'overflow_03_mul'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test 'overflow_04_unary'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test 'overflow_05_crc'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_06_jfdctint_new'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test 'overflow_07_fib_call'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_08_ludcmp_new'
  Input: main.c
  Output: main.out
  Options: 
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc  main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_09_bcnt'
  Input: main.c
  Output: main.out
  Options: --unwind 17 --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 17 --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_10_fir'
  Input: main.c
  Output: main.out
  Options: --unwind 34 --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 34 --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_11_matmul_new'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_12_adpcm'
  Input: main.c
  Output: main.out
  Options: --unwind 100 --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 100 --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_13_qurt_new'
  Input: main.c
  Output: main.out
  Options: --claim 1 --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --claim 1 --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_15_fft1k_new'
  Input: main.c
  Output: main.out
  Options: --unwind 10 --overflow-check --no-unwinding-assertions
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 10 --overflow-check --no-unwinding-assertions main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_16_bs_new'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_16_fir_new'
  Input: main.c
  Output: main.out
  Options: --unwind 34 --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 34 --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_17_crc_new'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_18_insertsort_new'
  Input: main.c
  Output: main.out
  Options: --unwind 34 --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --unwind 34 --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_19_typecast'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test 'overflow_20_typecast'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION SUCCESSFUL$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION SUCCESSFUL$ [OK]

Test 'overflow_21_typecast'
  Input: main.c
  Output: main.out
  Options: --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

Test 'overflow_22_wordplay'
  Input: main.c
  Output: main.out
  Options: --unwind 1 --overflow-check
  Results:
    ^VERIFICATION FAILED$
Running esbmc --unwind 1 --overflow-check main.c >main.out 2>&1
  Exit: 0
  Signal: 0
  Core: 0
Execution [OK]
^VERIFICATION FAILED$ [OK]

