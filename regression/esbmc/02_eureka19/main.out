file main.c: Parsing
Converting
Type-checking main
Generating GOTO Program
Pointer Analysis
Adding Pointer Checks
Starting Bounded Model Checking
Unwinding loop 2 iteration 1 file main.c line 27 function main
Unwinding loop 2 iteration 2 file main.c line 27 function main
Unwinding loop 2 iteration 3 file main.c line 27 function main
Unwinding loop 2 iteration 4 file main.c line 27 function main
Unwinding loop 2 iteration 5 file main.c line 27 function main
Unwinding loop 0 iteration 1 file main.c line 15 function SelectionSort
Unwinding loop 0 iteration 2 file main.c line 15 function SelectionSort
Unwinding loop 0 iteration 3 file main.c line 15 function SelectionSort
Unwinding loop 0 iteration 4 file main.c line 15 function SelectionSort
Unwinding loop 1 iteration 1 file main.c line 13 function SelectionSort
Unwinding loop 0 iteration 1 file main.c line 15 function SelectionSort
Unwinding loop 0 iteration 2 file main.c line 15 function SelectionSort
Unwinding loop 0 iteration 3 file main.c line 15 function SelectionSort
Unwinding loop 1 iteration 2 file main.c line 13 function SelectionSort
Unwinding loop 0 iteration 1 file main.c line 15 function SelectionSort
Unwinding loop 0 iteration 2 file main.c line 15 function SelectionSort
Unwinding loop 1 iteration 3 file main.c line 13 function SelectionSort
Unwinding loop 0 iteration 1 file main.c line 15 function SelectionSort
Unwinding loop 1 iteration 4 file main.c line 13 function SelectionSort
Unwinding loop 1 iteration 5 file main.c line 13 function SelectionSort
Unwinding loop 3 iteration 1 file main.c line 32 function main
Unwinding loop 3 iteration 2 file main.c line 32 function main
Unwinding loop 3 iteration 3 file main.c line 32 function main
Unwinding loop 3 iteration 4 file main.c line 32 function main
Unwinding loop 3 iteration 5 file main.c line 32 function main
size of program expression: 182 assignments
Generated 105 VCC(s), 5 remaining after simplification
Encoding remaining VCC(s) using integer/real arithmetic
Solving with SMT Solver Z3 v2.11
Runtime decision procedure: 0.001s
Building error trace

Counterexample:

State 3 file main.c line 28 function main thread 0
----------------------------------------------------
  main::main::1::array={ 0, 0, 0, 0, 4 }

State 6 file main.c line 28 function main thread 0
----------------------------------------------------
  main::main::1::array={ 0, 0, 0, 3, 4 }

State 9 file main.c line 28 function main thread 0
----------------------------------------------------
  main::main::1::array={ 0, 0, 2, 3, 4 }

State 12 file main.c line 28 function main thread 0
----------------------------------------------------
  main::main::1::array={ 0, 1, 2, 3, 4 }

State 15 file main.c line 28 function main thread 0
----------------------------------------------------
  main::main::1::array={ 0, 1, 2, 3, 4 }

Violated property:
  file main.c line 33 function main
  assertion
  array[i] != i

VERIFICATION FAILED
EXIT=0
SIGNAL=0
