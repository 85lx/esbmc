(benchmark cbmc
:source { Generated by CBMC 3.6 }
:status unknown
:logic QF_AUFBV ; SMT1

:extrafuns((symex_dynamic''dynamic_1_value BitVec[32]))
:extrafuns((c''__CPROVER_alloc'35'1 Array[32:1]))
:extrapreds((B0))
:assumption ; convert 
 (iff B0 (and false (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))))

:extrapreds((B1))
:assumption ; convert 
 (iff B1 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (= bv2[8] ?obj)) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))))

:extrapreds((B2))
:assumption ; convert 
 (iff B2 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (= bv2[8] ?obj)) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))))

:extrapreds((B3))
:assumption ; convert 
 (iff B3 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (= bv2[8] ?obj)) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))))

:extrapreds((B4))
:assumption ; convert 
 (iff B4 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (= bv2[8] ?obj)) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))))

:extrafuns((symex_dynamic''dynamic_2_value BitVec[32]))
:extrafuns((c''__CPROVER_alloc'35'2 Array[32:1]))
:extrapreds((B5))
:assumption ; convert 
 (iff B5 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (= bv2[8] ?obj)) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1])) (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (= bv2[8] ?obj)) (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1]))))

:extrapreds((B6))
:assumption ; convert 
 (iff B6 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1])) (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1]))))

:extrapreds((B7))
:assumption ; convert 
 (iff B7 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1])) (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1]))))

:extrapreds((B8))
:assumption ; convert 
 (iff B8 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1])) (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1]))))

; the following is a poor substitute for lambda i. x
:extrafuns((array_of'0 Array[32:1]))
:assumption ; set_to true
 (= c''__CPROVER_alloc'35'1 array_of'0)

:extrafuns((c''__CPROVER_alloc_size'35'1 Array[32:32]))
; the following is a poor substitute for lambda i. x
:extrafuns((array_of'1 Array[32:32]))
:assumption ; set_to true
 (= c''__CPROVER_alloc_size'35'1 array_of'1)

:extrafuns((c''__func__'35'1 Array[32:8]))
; the following is a poor substitute for lambda i. x
:extrafuns((array_of'2 Array[32:8]))
:assumption ; set_to true
 (= c''__func__'35'1 array_of'2)

:extrafuns((c''__CPROVER_rounding_mode'35'1 BitVec[32]))
:assumption ; set_to true
 (= c''__CPROVER_rounding_mode'35'1 bv0[32])

:extrafuns((c''main'''36'tmp''return_value_malloc'36'1'64'1'35'1 BitVec[40]))
:assumption ; set_to true
 (= c''main'''36'tmp''return_value_malloc'36'1'64'1'35'1 (concat bv2[8] bv0[32]))

:extrafuns((c''__CPROVER_alloc_size'35'2 Array[32:32]))
:assumption ; set_to true
 (= c''__CPROVER_alloc_size'35'2 (store c''__CPROVER_alloc_size'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32]))) bv1[32]))

:assumption ; set_to true
 (= c''__CPROVER_alloc'35'2 (store c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32]))) bit1))

:extrafuns((c''main''main''1''curr'64'1'35'1 BitVec[40]))
:assumption ; set_to true
 (= c''main''main''1''curr'64'1'35'1 (concat bv2[8] bv0[32]))

:extrafuns((c''main'''36'tmp''return_value_malloc'36'2'64'1'35'1 BitVec[40]))
:assumption ; set_to true
 (= c''main'''36'tmp''return_value_malloc'36'2'64'1'35'1 (concat bv3[8] bv0[32]))

:extrafuns((c''__CPROVER_alloc_size'35'3 Array[32:32]))
:assumption ; set_to true
 (= c''__CPROVER_alloc_size'35'3 (store c''__CPROVER_alloc_size'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32]))) bv1[32]))

:extrafuns((c''__CPROVER_alloc'35'3 Array[32:1]))
:assumption ; set_to true
 (= c''__CPROVER_alloc'35'3 (store c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32]))) bit1))

:extrafuns((c''main''main''1''curr'64'1'35'2 BitVec[40]))
:assumption ; set_to true
 (= c''main''main''1''curr'64'1'35'2 (concat bv3[8] bv0[32]))

:extrapreds((B9))
:assumption ; convert 
 (iff B9 (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))))

:extrapreds((B10))
:assumption ; convert 
 (iff B10 (implies (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))) (and (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1])))))

:assumption ; set_to true
 (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj)))

:assumption ; set_to false
 (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))

:assumption ; set_to true
 (implies (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))) (and (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1]))))

:assumption ; set_to true
 (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj)))

:assumption ; set_to false
 (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1]))

:assumption ; set_to true
 (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj)))

:assumption ; set_to false
 (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1]))

:extrapreds((B11))
:assumption ; convert 
 (iff B11 (not (and (let (?obj (extract[39:32] (concat bv2[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'1 (zero_extend[24] (extract[39:32] (concat bv2[8] bv0[32])))) bv1[1])) (let (?obj (extract[39:32] (concat bv3[8] bv0[32]))) (or (= bv2[8] ?obj) (= bv3[8] ?obj))) (not (= (select c''__CPROVER_alloc'35'2 (zero_extend[24] (extract[39:32] (concat bv3[8] bv0[32])))) bv1[1])))))

:formula true
) ; benchmark
